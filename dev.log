
> agendaiq@0.1.0 dev
> next dev

   ▲ Next.js 15.3.3
   - Local:        http://localhost:3000
   - Network:      http://10.0.0.126:3000
   - Environments: .env.local, .env
   - Experiments (use with caution):
     ✓ typedRoutes

 ✓ Starting...
> [PWA] PWA support is disabled
> [PWA] PWA support is disabled
 ✓ Compiled /instrumentation in 276ms (20 modules)
Sentry initialized for Node.js runtime
 ✓ Ready in 2.9s
 ○ Compiling /middleware ...
 ✓ Compiled /middleware in 1092ms (258 modules)
Sentry initialized for edge runtime
 ○ Compiling /dashboard/development ...
 ⚠ ./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/error.tsx

./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⨯ ReferenceError: TestTubeIcon is not defined
    at TestDashboard (src/components/development/test-dashboard.tsx:415:25)
  413 |                     {testResults.length === 0 ? (
  414 |                       <div className="text-center py-8">
> 415 |                         <TestTubeIcon className="h-12 w-12 text-gray-300 mx-auto mb-4" />
      |                         ^
  416 |                         <p className="text-muted-foreground">No test results yet</p>
  417 |                         <p className="text-sm text-muted-foreground">Run tests to see results</p>
  418 |                       </div> {
  digest: '2432785240'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 500 in 14524ms
 ⚠ ./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/error.tsx

./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 GET /api/auth/session 200 in 5589ms
 GET /api/auth/session 200 in 5591ms
 GET /api/auth/session 200 in 5676ms
EdgeAuditLogger: Could not determine client IP address from headers
EdgeAuditLogger: Could not determine client IP address from headers
EdgeAuditLogger: Could not determine client IP address from headers
EdgeAuditLogger: Could not determine client IP address from headers
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 POST /api/auth/_log 200 in 1125ms
 POST /api/auth/_log 200 in 1127ms
 POST /api/auth/_log 200 in 1126ms
 ⨯ ReferenceError: TestTubeIcon is not defined
    at TestDashboard (src/components/development/test-dashboard.tsx:415:25)
  413 |                     {testResults.length === 0 ? (
  414 |                       <div className="text-center py-8">
> 415 |                         <TestTubeIcon className="h-12 w-12 text-gray-300 mx-auto mb-4" />
      |                         ^
  416 |                         <p className="text-muted-foreground">No test results yet</p>
  417 |                         <p className="text-sm text-muted-foreground">Run tests to see results</p>
  418 |                       </div> {
  digest: '2432785240'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 500 in 1296ms
 GET /api/auth/session 200 in 57ms
 GET /api/auth/session 200 in 16ms
 GET /api/auth/session 200 in 20ms
 ⚠ ./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⨯ ReferenceError: TestTubeIcon is not defined
    at TestDashboard (src/components/development/test-dashboard.tsx:415:25)
  413 |                     {testResults.length === 0 ? (
  414 |                       <div className="text-center py-8">
> 415 |                         <TestTubeIcon className="h-12 w-12 text-gray-300 mx-auto mb-4" />
      |                         ^
  416 |                         <p className="text-muted-foreground">No test results yet</p>
  417 |                         <p className="text-sm text-muted-foreground">Run tests to see results</p>
  418 |                       </div> {
  digest: '2432785240'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 500 in 1066ms
 GET /api/auth/session 200 in 58ms
 GET /api/auth/session 200 in 19ms
 GET /api/auth/session 200 in 25ms
 ⚠ ./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
Sentry initialized for edge runtime
 ⚠ ./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
Server Error: {
  name: 'Error',
  message: 'Test error from Sentry test endpoint',
  stack: 'Error: Test error from Sentry test endpoint\n' +
    '    at GET (webpack-internal:///(rsc)/./src/app/api/test-sentry/route.ts:30:23)\n' +
    '    at AsyncLocalStorage.run (node:async_hooks:327:14)\n' +
    '    at AppRouteRouteModule.do (/Users/hs/Project/agendaiq/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:34191)\n' +
    '    at /Users/hs/Project/agendaiq/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:43872\n' +
    '    at /Users/hs/Project/agendaiq/node_modules/next/dist/server/lib/trace/tracer.js:169:36\n' +
    '    at NoopContextManager.with (/Users/hs/Project/agendaiq/node_modules/@opentelemetry/api/build/src/context/NoopContextManager.js:25:19)\n' +
    '    at ContextAPI.with (/Users/hs/Project/agendaiq/node_modules/@opentelemetry/api/build/src/api/context.js:60:46)\n' +
    '    at NoopTracer.startActiveSpan (/Users/hs/Project/agendaiq/node_modules/@opentelemetry/api/build/src/trace/NoopTracer.js:65:31)\n' +
    '    at ProxyTracer.startActiveSpan (/Users/hs/Project/agendaiq/node_modules/@opentelemetry/api/build/src/trace/ProxyTracer.js:36:24)\n' +
    '    at /Users/hs/Project/agendaiq/node_modules/next/dist/server/lib/trace/tracer.js:151:103\n' +
    '    at NoopContextManager.with (/Users/hs/Project/agendaiq/node_modules/@opentelemetry/api/build/src/context/NoopContextManager.js:25:19)\n' +
    '    at ContextAPI.with (/Users/hs/Project/agendaiq/node_modules/@opentelemetry/api/build/src/api/context.js:60:46)\n' +
    '    at NextTracerImpl.trace (/Users/hs/Project/agendaiq/node_modules/next/dist/server/lib/trace/tracer.js:151:28)\n' +
    '    at /Users/hs/Project/agendaiq/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:43733\n' +
    '    at AsyncLocalStorage.run (node:async_hooks:338:14)\n' +
    '    at /Users/hs/Project/agendaiq/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41457\n' +
    '    at AsyncLocalStorage.run (node:async_hooks:338:14)\n' +
    '    at /Users/hs/Project/agendaiq/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41414\n' +
    '    at AsyncLocalStorage.run (node:async_hooks:338:14)\n' +
    '    at AppRouteRouteModule.handle (/Users/hs/Project/agendaiq/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41368)\n' +
    '    at async doRender (/Users/hs/Project/agendaiq/node_modules/next/dist/server/base-server.js:1518:42)'
}
 GET /api/test-sentry?type=simple 500 in 1068ms
Server Error: {
  name: 'Error',
  message: 'Error after breadcrumb trail',
  stack: 'Error: Error after breadcrumb trail\n' +
    '    at GET (webpack-internal:///(rsc)/./src/app/api/test-sentry/route.ts:60:23)\n' +
    '    at AsyncLocalStorage.run (node:async_hooks:327:14)\n' +
    '    at AppRouteRouteModule.do (/Users/hs/Project/agendaiq/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:34191)\n' +
    '    at /Users/hs/Project/agendaiq/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:43872\n' +
    '    at /Users/hs/Project/agendaiq/node_modules/next/dist/server/lib/trace/tracer.js:169:36\n' +
    '    at NoopContextManager.with (/Users/hs/Project/agendaiq/node_modules/@opentelemetry/api/build/src/context/NoopContextManager.js:25:19)\n' +
    '    at ContextAPI.with (/Users/hs/Project/agendaiq/node_modules/@opentelemetry/api/build/src/api/context.js:60:46)\n' +
    '    at NoopTracer.startActiveSpan (/Users/hs/Project/agendaiq/node_modules/@opentelemetry/api/build/src/trace/NoopTracer.js:65:31)\n' +
    '    at ProxyTracer.startActiveSpan (/Users/hs/Project/agendaiq/node_modules/@opentelemetry/api/build/src/trace/ProxyTracer.js:36:24)\n' +
    '    at /Users/hs/Project/agendaiq/node_modules/next/dist/server/lib/trace/tracer.js:151:103\n' +
    '    at NoopContextManager.with (/Users/hs/Project/agendaiq/node_modules/@opentelemetry/api/build/src/context/NoopContextManager.js:25:19)\n' +
    '    at ContextAPI.with (/Users/hs/Project/agendaiq/node_modules/@opentelemetry/api/build/src/api/context.js:60:46)\n' +
    '    at NextTracerImpl.trace (/Users/hs/Project/agendaiq/node_modules/next/dist/server/lib/trace/tracer.js:151:28)\n' +
    '    at /Users/hs/Project/agendaiq/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:43733\n' +
    '    at AsyncLocalStorage.run (node:async_hooks:338:14)\n' +
    '    at /Users/hs/Project/agendaiq/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41457\n' +
    '    at AsyncLocalStorage.run (node:async_hooks:338:14)\n' +
    '    at /Users/hs/Project/agendaiq/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41414\n' +
    '    at AsyncLocalStorage.run (node:async_hooks:338:14)\n' +
    '    at AppRouteRouteModule.handle (/Users/hs/Project/agendaiq/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41368)\n' +
    '    at async doRender (/Users/hs/Project/agendaiq/node_modules/next/dist/server/base-server.js:1518:42)'
}
 GET /api/test-sentry?type=breadcrumb 500 in 26ms
 GET /api/test-sentry?type=user-context 200 in 41ms
 ⚠ ./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/api/test-sentry/route.ts
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard 200 in 1945ms
 ⚠ ./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/api/test-sentry/route.ts
 ⚠ ./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/api/test-sentry/route.ts
 GET /api/auth/session 200 in 506ms
 GET /api/auth/session 200 in 508ms
 GET /api/auth/session 200 in 555ms
 ⚠ ./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/api/test-sentry/route.ts
 ⚠ ./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/api/test-sentry/route.ts
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 3915ms
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '3833021978'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/meetings/2/live. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/meetings/2/live. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/meetings/2/live 200 in 8045ms
 GET /api/auth/session 200 in 45ms
 GET /api/auth/session 200 in 39ms
 GET /api/auth/session 200 in 45ms
 GET /api/auth/session 200 in 14ms
 ⚠ ./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/api/test-sentry/route.ts
 ⚠ ./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
Pusher auth error: SyntaxError: Unexpected token s in JSON at position 0
    at JSON.parse (<anonymous>)
    at async POST (src/app/api/pusher/auth/route.ts:19:17)
  17 |
  18 |     // Get the request body
> 19 |     const body = await request.json();
     |                 ^
  20 |     const socketId = body.socket_id;
  21 |     const channel = body.channel_name;
  22 |
 POST /api/pusher/auth 500 in 962ms
Pusher auth error: SyntaxError: Unexpected token s in JSON at position 0
    at JSON.parse (<anonymous>)
    at async POST (src/app/api/pusher/auth/route.ts:19:17)
  17 |
  18 |     // Get the request body
> 19 |     const body = await request.json();
     |                 ^
  20 |     const socketId = body.socket_id;
  21 |     const channel = body.channel_name;
  22 |
 POST /api/pusher/auth 500 in 1041ms
Pusher auth error: SyntaxError: Unexpected token s in JSON at position 0
    at JSON.parse (<anonymous>)
    at async POST (src/app/api/pusher/auth/route.ts:19:17)
  17 |
  18 |     // Get the request body
> 19 |     const body = await request.json();
     |                 ^
  20 |     const socketId = body.socket_id;
  21 |     const channel = body.channel_name;
  22 |
 POST /api/pusher/auth 500 in 1087ms
Pusher auth error: SyntaxError: Unexpected token s in JSON at position 0
    at JSON.parse (<anonymous>)
    at async POST (src/app/api/pusher/auth/route.ts:19:17)
  17 |
  18 |     // Get the request body
> 19 |     const body = await request.json();
     |                 ^
  20 |     const socketId = body.socket_id;
  21 |     const channel = body.channel_name;
  22 |
 POST /api/pusher/auth 500 in 1137ms
Pusher auth error: SyntaxError: Unexpected token s in JSON at position 0
    at JSON.parse (<anonymous>)
    at async POST (src/app/api/pusher/auth/route.ts:19:17)
  17 |
  18 |     // Get the request body
> 19 |     const body = await request.json();
     |                 ^
  20 |     const socketId = body.socket_id;
  21 |     const channel = body.channel_name;
  22 |
 POST /api/pusher/auth 500 in 1194ms
Pusher auth error: SyntaxError: Unexpected token s in JSON at position 0
    at JSON.parse (<anonymous>)
    at async POST (src/app/api/pusher/auth/route.ts:19:17)
  17 |
  18 |     // Get the request body
> 19 |     const body = await request.json();
     |                 ^
  20 |     const socketId = body.socket_id;
  21 |     const channel = body.channel_name;
  22 |
 POST /api/pusher/auth 500 in 1385ms
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard 200 in 837ms
 GET /api/auth/session 200 in 126ms
 GET /api/auth/session 200 in 223ms
 GET /api/auth/session 200 in 225ms
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard 200 in 86ms
 ⚠ ./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/meetings. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/meetings. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/meetings 200 in 1645ms
 ⚠ ./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 GET /api/meetings 200 in 1422ms
 GET /api/meetings 200 in 1424ms
 ⚠ ./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/meetings/2. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/meetings/2. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/meetings/2. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/meetings/2. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/meetings/2. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/meetings/2. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/meetings/2 200 in 1133ms
 GET /dashboard/meetings/2 200 in 1944ms
 GET /dashboard/meetings/2 200 in 903ms
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/meetings/2/live. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/meetings/2/live. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/meetings/2/live. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/meetings/2/live. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/meetings/2/live 200 in 97ms
 GET /dashboard/meetings/2/live 200 in 117ms
Pusher auth error: SyntaxError: Unexpected token s in JSON at position 0
    at JSON.parse (<anonymous>)
    at async POST (src/app/api/pusher/auth/route.ts:19:17)
  17 |
  18 |     // Get the request body
> 19 |     const body = await request.json();
     |                 ^
  20 |     const socketId = body.socket_id;
  21 |     const channel = body.channel_name;
  22 |
 POST /api/pusher/auth 500 in 385ms
Pusher auth error: SyntaxError: Unexpected token s in JSON at position 0
    at JSON.parse (<anonymous>)
    at async POST (src/app/api/pusher/auth/route.ts:19:17)
  17 |
  18 |     // Get the request body
> 19 |     const body = await request.json();
     |                 ^
  20 |     const socketId = body.socket_id;
  21 |     const channel = body.channel_name;
  22 |
 POST /api/pusher/auth 500 in 76ms
Pusher auth error: SyntaxError: Unexpected token s in JSON at position 0
    at JSON.parse (<anonymous>)
    at async POST (src/app/api/pusher/auth/route.ts:19:17)
  17 |
  18 |     // Get the request body
> 19 |     const body = await request.json();
     |                 ^
  20 |     const socketId = body.socket_id;
  21 |     const channel = body.channel_name;
  22 |
 POST /api/pusher/auth 500 in 275ms
Pusher auth error: SyntaxError: Unexpected token s in JSON at position 0
    at JSON.parse (<anonymous>)
    at async POST (src/app/api/pusher/auth/route.ts:19:17)
  17 |
  18 |     // Get the request body
> 19 |     const body = await request.json();
     |                 ^
  20 |     const socketId = body.socket_id;
  21 |     const channel = body.channel_name;
  22 |
 POST /api/pusher/auth 500 in 412ms
Pusher auth error: SyntaxError: Unexpected token s in JSON at position 0
    at JSON.parse (<anonymous>)
    at async POST (src/app/api/pusher/auth/route.ts:19:17)
  17 |
  18 |     // Get the request body
> 19 |     const body = await request.json();
     |                 ^
  20 |     const socketId = body.socket_id;
  21 |     const channel = body.channel_name;
  22 |
 POST /api/pusher/auth 500 in 599ms
Pusher auth error: SyntaxError: Unexpected token s in JSON at position 0
    at JSON.parse (<anonymous>)
    at async POST (src/app/api/pusher/auth/route.ts:19:17)
  17 |
  18 |     // Get the request body
> 19 |     const body = await request.json();
     |                 ^
  20 |     const socketId = body.socket_id;
  21 |     const channel = body.channel_name;
  22 |
 POST /api/pusher/auth 500 in 677ms
 ⚠ ./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./src/components/development/test-dashboard.tsx
Attempted import error: 'StopIcon' is not exported from '__barrel_optimize__?names=AlertCircleIcon,BarChart2Icon,CheckCircleIcon,ClockIcon,DownloadIcon,FilterIcon,Loader2Icon,PlayIcon,RefreshCwIcon,SearchIcon,StopIcon,TrendingUpIcon,XCircleIcon!=!lucide-react' (imported as 'StopIcon').

Import trace for requested module:
./src/components/development/test-dashboard.tsx
./src/app/dashboard/development/page.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/meetings/2/agenda/7. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/meetings/2/agenda/7. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/meetings/2/agenda/7 200 in 1801ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/meetings/2/agenda/7. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/meetings/2/agenda/7. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 GET /dashboard/meetings/2/agenda/7 200 in 1374ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 GET /api/test-sentry?type=none 200 in 1044ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/api/test-sentry/route.ts
 POST /api/meetings/2/agenda-items/7/comments 200 in 2247ms
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/meetings/2/agenda/7. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/meetings/2/agenda/7. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/meetings/2/agenda/7 200 in 504ms
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/meetings/2/live. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/meetings/2/live. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/meetings/2/live 200 in 92ms
Pusher auth error: SyntaxError: Unexpected token s in JSON at position 0
    at JSON.parse (<anonymous>)
    at async POST (src/app/api/pusher/auth/route.ts:19:17)
  17 |
  18 |     // Get the request body
> 19 |     const body = await request.json();
     |                 ^
  20 |     const socketId = body.socket_id;
  21 |     const channel = body.channel_name;
  22 |
 POST /api/pusher/auth 500 in 124ms
Pusher auth error: SyntaxError: Unexpected token s in JSON at position 0
    at JSON.parse (<anonymous>)
    at async POST (src/app/api/pusher/auth/route.ts:19:17)
  17 |
  18 |     // Get the request body
> 19 |     const body = await request.json();
     |                 ^
  20 |     const socketId = body.socket_id;
  21 |     const channel = body.channel_name;
  22 |
 POST /api/pusher/auth 500 in 67ms
Pusher auth error: SyntaxError: Unexpected token s in JSON at position 0
    at JSON.parse (<anonymous>)
    at async POST (src/app/api/pusher/auth/route.ts:19:17)
  17 |
  18 |     // Get the request body
> 19 |     const body = await request.json();
     |                 ^
  20 |     const socketId = body.socket_id;
  21 |     const channel = body.channel_name;
  22 |
 POST /api/pusher/auth 500 in 125ms
Pusher auth error: SyntaxError: Unexpected token s in JSON at position 0
    at JSON.parse (<anonymous>)
    at async POST (src/app/api/pusher/auth/route.ts:19:17)
  17 |
  18 |     // Get the request body
> 19 |     const body = await request.json();
     |                 ^
  20 |     const socketId = body.socket_id;
  21 |     const channel = body.channel_name;
  22 |
 POST /api/pusher/auth 500 in 173ms
Pusher auth error: SyntaxError: Unexpected token s in JSON at position 0
    at JSON.parse (<anonymous>)
    at async POST (src/app/api/pusher/auth/route.ts:19:17)
  17 |
  18 |     // Get the request body
> 19 |     const body = await request.json();
     |                 ^
  20 |     const socketId = body.socket_id;
  21 |     const channel = body.channel_name;
  22 |
 POST /api/pusher/auth 500 in 222ms
Pusher auth error: SyntaxError: Unexpected token s in JSON at position 0
    at JSON.parse (<anonymous>)
    at async POST (src/app/api/pusher/auth/route.ts:19:17)
  17 |
  18 |     // Get the request body
> 19 |     const body = await request.json();
     |                 ^
  20 |     const socketId = body.socket_id;
  21 |     const channel = body.channel_name;
  22 |
 POST /api/pusher/auth 500 in 274ms
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 28ms
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⨯ ReferenceError: TestTubeIcon is not defined
    at TestDashboard (src/components/development/test-dashboard.tsx:415:25)
  413 |                     {testResults.length === 0 ? (
  414 |                       <div className="text-center py-8">
> 415 |                         <TestTubeIcon className="h-12 w-12 text-gray-300 mx-auto mb-4" />
      |                         ^
  416 |                         <p className="text-muted-foreground">No test results yet</p>
  417 |                         <p className="text-sm text-muted-foreground">Run tests to see results</p>
  418 |                       </div> {
  digest: '3027788287'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 500 in 1148ms
 GET /api/auth/session 200 in 46ms
 GET /api/auth/session 200 in 23ms
 GET /api/auth/session 200 in 31ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/api/test-sentry/route.ts
 ⚠ Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
EdgeAuditLogger: Could not determine client IP address from headers
EdgeAuditLogger: Could not determine client IP address from headers
EdgeAuditLogger: Could not determine client IP address from headers
EdgeAuditLogger: Could not determine client IP address from headers
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⨯ ReferenceError: TestTubeIcon is not defined
    at TestDashboard (src/components/development/test-dashboard.tsx:416:25)
  414 |                     {testResults.length === 0 ? (
  415 |                       <div className="text-center py-8">
> 416 |                         <TestTubeIcon className="h-12 w-12 text-gray-300 mx-auto mb-4" />
      |                         ^
  417 |                         <p className="text-muted-foreground">No test results yet</p>
  418 |                         <p className="text-sm text-muted-foreground">Run tests to see results</p>
  419 |                       </div> {
  digest: '2432785240'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 500 in 3218ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/api/test-sentry/route.ts
 ⚠ Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 GET /api/auth/session 200 in 2553ms
 GET /api/auth/session 200 in 2412ms
 GET /api/auth/session 200 in 2413ms
EdgeAuditLogger: Could not determine client IP address from headers
EdgeAuditLogger: Could not determine client IP address from headers
EdgeAuditLogger: Could not determine client IP address from headers
EdgeAuditLogger: Could not determine client IP address from headers
 POST /api/auth/_log 200 in 24ms
 POST /api/auth/_log 200 in 25ms
 POST /api/auth/_log 200 in 25ms
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 1020ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/api/test-sentry/route.ts
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/api/test-sentry/route.ts
Server Error: {
  name: 'Error',
  message: 'Test error from Sentry test endpoint',
  stack: 'Error: Test error from Sentry test endpoint\n' +
    '    at GET (webpack-internal:///(rsc)/./src/app/api/test-sentry/route.ts:30:23)\n' +
    '    at AsyncLocalStorage.run (node:async_hooks:327:14)\n' +
    '    at AppRouteRouteModule.do (/Users/hs/Project/agendaiq/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:34191)\n' +
    '    at /Users/hs/Project/agendaiq/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:43872\n' +
    '    at /Users/hs/Project/agendaiq/node_modules/next/dist/server/lib/trace/tracer.js:169:36\n' +
    '    at NoopContextManager.with (/Users/hs/Project/agendaiq/node_modules/@opentelemetry/api/build/src/context/NoopContextManager.js:25:19)\n' +
    '    at ContextAPI.with (/Users/hs/Project/agendaiq/node_modules/@opentelemetry/api/build/src/api/context.js:60:46)\n' +
    '    at NoopTracer.startActiveSpan (/Users/hs/Project/agendaiq/node_modules/@opentelemetry/api/build/src/trace/NoopTracer.js:65:31)\n' +
    '    at ProxyTracer.startActiveSpan (/Users/hs/Project/agendaiq/node_modules/@opentelemetry/api/build/src/trace/ProxyTracer.js:36:24)\n' +
    '    at /Users/hs/Project/agendaiq/node_modules/next/dist/server/lib/trace/tracer.js:151:103\n' +
    '    at NoopContextManager.with (/Users/hs/Project/agendaiq/node_modules/@opentelemetry/api/build/src/context/NoopContextManager.js:25:19)\n' +
    '    at ContextAPI.with (/Users/hs/Project/agendaiq/node_modules/@opentelemetry/api/build/src/api/context.js:60:46)\n' +
    '    at NextTracerImpl.trace (/Users/hs/Project/agendaiq/node_modules/next/dist/server/lib/trace/tracer.js:151:28)\n' +
    '    at /Users/hs/Project/agendaiq/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:43733\n' +
    '    at AsyncLocalStorage.run (node:async_hooks:338:14)\n' +
    '    at /Users/hs/Project/agendaiq/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41457\n' +
    '    at AsyncLocalStorage.run (node:async_hooks:338:14)\n' +
    '    at /Users/hs/Project/agendaiq/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41414\n' +
    '    at AsyncLocalStorage.run (node:async_hooks:338:14)\n' +
    '    at AppRouteRouteModule.handle (/Users/hs/Project/agendaiq/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41368)\n' +
    '    at async doRender (/Users/hs/Project/agendaiq/node_modules/next/dist/server/base-server.js:1518:42)'
}
 GET /api/test-sentry?type=simple 500 in 1457ms
 GET /api/auth/session 200 in 2906ms
 GET /api/auth/session 200 in 3010ms
 GET /api/tests/suites 200 in 4882ms
 GET /api/tests/suites 200 in 4796ms
 GET /api/tests/generate 200 in 4884ms
 GET /api/tests/generate 200 in 4803ms
 GET /api/tests/generate 200 in 126ms
 GET /api/auth/session 200 in 128ms
 GET /api/tests/suites 200 in 160ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/api/test-sentry/route.ts
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/api/test-sentry/route.ts
{
  "timestamp": "2025-08-05T15:41:54.714Z",
  "level": "INFO",
  "message": "AUDIT: TEST_RUN",
  "context": "testing",
  "metadata": {
    "userId": 1
  },
  "data": {
    "coverage": true
  }
}
 POST /api/tests/run 200 in 3852ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/api/test-sentry/route.ts
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '2669470949'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /api. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /api. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /api. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /api. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /api 500 in 2744ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 GET /api/tests/suites 200 in 1159ms
 GET /api/tests/suites 200 in 1160ms
 GET /api/tests/generate 200 in 1162ms
 GET /api/tests/generate 200 in 1163ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
{
  "timestamp": "2025-08-05T15:43:02.191Z",
  "level": "INFO",
  "message": "AUDIT: TEST_RUN",
  "context": "testing",
  "metadata": {
    "userId": 1
  },
  "data": {
    "coverage": true
  }
}
 POST /api/tests/run 200 in 3531ms
{
  "timestamp": "2025-08-05T15:43:08.253Z",
  "level": "INFO",
  "message": "AUDIT: TEST_RUN",
  "context": "testing",
  "metadata": {
    "userId": 1
  },
  "data": {
    "suite": "src/__tests__/e2e/auth.e2e.test.ts",
    "coverage": false
  }
}
 POST /api/tests/run 200 in 3723ms
 GET /api/tests/suites 200 in 131ms
 GET /api/tests/suites 200 in 183ms
 GET /api/tests/generate 200 in 185ms
 GET /api/tests/generate 200 in 186ms
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/meetings/2/live. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/meetings/2/live. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/meetings/2/live 200 in 674ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
EdgeAuditLogger: Could not determine client IP address from headers
EdgeAuditLogger: Could not determine client IP address from headers
EdgeAuditLogger: Could not determine client IP address from headers
EdgeAuditLogger: Could not determine client IP address from headers
 ⨯ [Error: aborted]
 ⚠ Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
Pusher auth error: SyntaxError: Unexpected end of JSON input
    at JSON.parse (<anonymous>)
    at POST (src/app/api/pusher/auth/route.ts:19:31)
  17 |
  18 |     // Get the request body
> 19 |     const body = await request.json();
     |                               ^
  20 |     const socketId = body.socket_id;
  21 |     const channel = body.channel_name;
  22 |
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/meetings/2/live. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/meetings/2/live. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/meetings/2/live. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/meetings/2/live. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/meetings/2/live 200 in 5236ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 GET /api/auth/session 200 in 1551ms
 GET /api/auth/session 200 in 1442ms
 GET /api/auth/session 200 in 1443ms
Pusher auth error: SyntaxError: Unexpected token s in JSON at position 0
    at JSON.parse (<anonymous>)
    at async POST (src/app/api/pusher/auth/route.ts:19:17)
  17 |
  18 |     // Get the request body
> 19 |     const body = await request.json();
     |                 ^
  20 |     const socketId = body.socket_id;
  21 |     const channel = body.channel_name;
  22 |
 POST /api/pusher/auth 500 in 1254ms
Pusher auth error: SyntaxError: Unexpected token s in JSON at position 0
    at JSON.parse (<anonymous>)
    at async POST (src/app/api/pusher/auth/route.ts:19:17)
  17 |
  18 |     // Get the request body
> 19 |     const body = await request.json();
     |                 ^
  20 |     const socketId = body.socket_id;
  21 |     const channel = body.channel_name;
  22 |
 POST /api/pusher/auth 500 in 1340ms
Pusher auth error: SyntaxError: Unexpected token s in JSON at position 0
    at JSON.parse (<anonymous>)
    at async POST (src/app/api/pusher/auth/route.ts:19:17)
  17 |
  18 |     // Get the request body
> 19 |     const body = await request.json();
     |                 ^
  20 |     const socketId = body.socket_id;
  21 |     const channel = body.channel_name;
  22 |
 POST /api/pusher/auth 500 in 1628ms
Pusher auth error: SyntaxError: Unexpected token s in JSON at position 0
    at JSON.parse (<anonymous>)
    at async POST (src/app/api/pusher/auth/route.ts:19:17)
  17 |
  18 |     // Get the request body
> 19 |     const body = await request.json();
     |                 ^
  20 |     const socketId = body.socket_id;
  21 |     const channel = body.channel_name;
  22 |
 POST /api/pusher/auth 500 in 133ms
Pusher auth error: SyntaxError: Unexpected token s in JSON at position 0
    at JSON.parse (<anonymous>)
    at async POST (src/app/api/pusher/auth/route.ts:19:17)
  17 |
  18 |     // Get the request body
> 19 |     const body = await request.json();
     |                 ^
  20 |     const socketId = body.socket_id;
  21 |     const channel = body.channel_name;
  22 |
 POST /api/pusher/auth 500 in 243ms
Pusher auth error: SyntaxError: Unexpected token s in JSON at position 0
    at JSON.parse (<anonymous>)
    at async POST (src/app/api/pusher/auth/route.ts:19:17)
  17 |
  18 |     // Get the request body
> 19 |     const body = await request.json();
     |                 ^
  20 |     const socketId = body.socket_id;
  21 |     const channel = body.channel_name;
  22 |
 POST /api/pusher/auth 500 in 310ms
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 101ms
 GET /api/tests/suites 200 in 137ms
 GET /api/tests/suites 200 in 170ms
 GET /api/tests/generate 200 in 173ms
 GET /api/tests/generate 200 in 176ms
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 29ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
{
  "timestamp": "2025-08-05T15:45:12.270Z",
  "level": "INFO",
  "message": "AUDIT: TEST_RUN",
  "context": "testing",
  "metadata": {
    "userId": 1
  },
  "data": {
    "coverage": true
  }
}
 POST /api/tests/run 200 in 4198ms
{
  "timestamp": "2025-08-05T15:45:23.923Z",
  "level": "INFO",
  "message": "AUDIT: TEST_RUN",
  "context": "testing",
  "metadata": {
    "userId": 1
  },
  "data": {
    "coverage": true
  }
}
 POST /api/tests/run 200 in 3631ms
 GET /api/tests/suites 200 in 168ms
 GET /api/tests/suites 200 in 231ms
 GET /api/tests/generate 200 in 234ms
 GET /api/tests/generate 200 in 240ms
{
  "timestamp": "2025-08-05T15:46:21.135Z",
  "level": "INFO",
  "message": "AUDIT: TEST_RUN",
  "context": "testing",
  "metadata": {
    "userId": 1
  },
  "data": {
    "suite": "src/__tests__/integration/auth/register.test.tsx",
    "coverage": false
  }
}
 POST /api/tests/run 200 in 3537ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
Server Error: {
  name: 'Error',
  message: 'Test error from Sentry test endpoint',
  stack: 'Error: Test error from Sentry test endpoint\n' +
    '    at GET (webpack-internal:///(rsc)/./src/app/api/test-sentry/route.ts:30:23)\n' +
    '    at AsyncLocalStorage.run (node:async_hooks:327:14)\n' +
    '    at AppRouteRouteModule.do (/Users/hs/Project/agendaiq/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:34191)\n' +
    '    at /Users/hs/Project/agendaiq/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:43872\n' +
    '    at /Users/hs/Project/agendaiq/node_modules/next/dist/server/lib/trace/tracer.js:169:36\n' +
    '    at NoopContextManager.with (/Users/hs/Project/agendaiq/node_modules/@opentelemetry/api/build/src/context/NoopContextManager.js:25:19)\n' +
    '    at ContextAPI.with (/Users/hs/Project/agendaiq/node_modules/@opentelemetry/api/build/src/api/context.js:60:46)\n' +
    '    at NoopTracer.startActiveSpan (/Users/hs/Project/agendaiq/node_modules/@opentelemetry/api/build/src/trace/NoopTracer.js:65:31)\n' +
    '    at ProxyTracer.startActiveSpan (/Users/hs/Project/agendaiq/node_modules/@opentelemetry/api/build/src/trace/ProxyTracer.js:36:24)\n' +
    '    at /Users/hs/Project/agendaiq/node_modules/next/dist/server/lib/trace/tracer.js:151:103\n' +
    '    at NoopContextManager.with (/Users/hs/Project/agendaiq/node_modules/@opentelemetry/api/build/src/context/NoopContextManager.js:25:19)\n' +
    '    at ContextAPI.with (/Users/hs/Project/agendaiq/node_modules/@opentelemetry/api/build/src/api/context.js:60:46)\n' +
    '    at NextTracerImpl.trace (/Users/hs/Project/agendaiq/node_modules/next/dist/server/lib/trace/tracer.js:151:28)\n' +
    '    at /Users/hs/Project/agendaiq/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:43733\n' +
    '    at AsyncLocalStorage.run (node:async_hooks:338:14)\n' +
    '    at /Users/hs/Project/agendaiq/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41457\n' +
    '    at AsyncLocalStorage.run (node:async_hooks:338:14)\n' +
    '    at /Users/hs/Project/agendaiq/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41414\n' +
    '    at AsyncLocalStorage.run (node:async_hooks:338:14)\n' +
    '    at AppRouteRouteModule.handle (/Users/hs/Project/agendaiq/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:26:41368)\n' +
    '    at async doRender (/Users/hs/Project/agendaiq/node_modules/next/dist/server/base-server.js:1518:42)'
}
 GET /api/test-sentry?type=simple 500 in 4221ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 8208ms
 GET /dashboard/development 200 in 380ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 791ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 595ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 3687ms
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 1535ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 852ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 2176ms
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 253ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 522ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 446ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 735ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '2669470949'
}
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '2669470949'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /api/dev/database/stats. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /api/dev/database/stats. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /api/dev/database/backups. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /api/dev/database/backups. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /api/dev/database/stats. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /api/dev/database/stats. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /api/dev/database/backups. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /api/dev/database/backups. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /api/dev/database/stats 500 in 7773ms
 GET /api/dev/database/backups 500 in 7757ms
 GET /dashboard/development 200 in 5726ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 714ms
 ⨯ ./src/components/development/database-manager.tsx
Error:   [31mx[0m Unexpected token `div`. Expected jsx identifier
     ,-[[36;1;4m/Users/hs/Project/agendaiq/src/components/development/database-manager.tsx[0m:127:1]
 [2m124[0m |   }
 [2m125[0m | 
 [2m126[0m |   return (
 [2m127[0m |     <div className="space-y-6">
     : [35;1m     ^^^[0m
 [2m128[0m |       <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
 [2m129[0m |         <Card>
 [2m130[0m |           <CardHeader className="pb-3">
     `----

Caused by:
    Syntax Error

Import trace for requested module:
./src/components/development/database-manager.tsx
./src/app/dashboard/development/page.tsx
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 714ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 3090ms
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 344ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 2531ms
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 344ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 2855ms
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 766ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 573ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 504ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
Failed to fetch test history: Error [PrismaClientValidationError]: 
Invalid `prisma.auditLog.findMany()` invocation:

{
  where: {
    tableName: "test_run",
    ~~~~~~~~~
    operation: "CREATE",
?   AND?: AuditLogWhereInput | AuditLogWhereInput[],
?   OR?: AuditLogWhereInput[],
?   NOT?: AuditLogWhereInput | AuditLogWhereInput[],
?   id?: IntFilter | Int,
?   table_name?: StringFilter | String,
?   record_id?: StringFilter | String,
?   field_changes?: JsonNullableFilter,
?   old_values?: JsonNullableFilter,
?   new_values?: JsonNullableFilter,
?   user_id?: IntNullableFilter | Int | Null,
?   staff_id?: IntNullableFilter | Int | Null,
?   source?: StringFilter | String,
?   description?: StringNullableFilter | String | Null,
?   ip_address?: StringNullableFilter | String | Null,
?   user_agent?: StringNullableFilter | String | Null,
?   metadata?: JsonNullableFilter,
?   created_at?: DateTimeFilter | DateTime,
?   User?: UserNullableScalarRelationFilter | UserWhereInput | Null,
?   Staff?: StaffNullableScalarRelationFilter | StaffWhereInput | Null
  },
  orderBy: {
    createdAt: "desc"
  },
  take: 30,
  select: {
    createdAt: true,
    changes: true
  }
}

Unknown argument `tableName`. Did you mean `table_name`? Available options are marked with ?.
    at async GET (src/app/api/tests/history/route.ts:14:21)
  12 |     // Get test history from audit logs or create a test_runs table in future
  13 |     // For now, we'll use audit logs to track test runs
> 14 |     const testLogs = await prisma.auditLog.findMany({
     |                     ^
  15 |       where: {
  16 |         tableName: 'test_run',
  17 |         operation: 'CREATE' {
  clientVersion: '6.13.0'
}
 GET /api/tests/history 500 in 6209ms
Failed to fetch dev stats: Error [PrismaClientValidationError]: 
Invalid `prisma.auditLog.findFirst()` invocation:

{
  where: {
    tableName: "test_run",
    ~~~~~~~~~
    operation: "CREATE",
?   AND?: AuditLogWhereInput | AuditLogWhereInput[],
?   OR?: AuditLogWhereInput[],
?   NOT?: AuditLogWhereInput | AuditLogWhereInput[],
?   id?: IntFilter | Int,
?   table_name?: StringFilter | String,
?   record_id?: StringFilter | String,
?   field_changes?: JsonNullableFilter,
?   old_values?: JsonNullableFilter,
?   new_values?: JsonNullableFilter,
?   user_id?: IntNullableFilter | Int | Null,
?   staff_id?: IntNullableFilter | Int | Null,
?   source?: StringFilter | String,
?   description?: StringNullableFilter | String | Null,
?   ip_address?: StringNullableFilter | String | Null,
?   user_agent?: StringNullableFilter | String | Null,
?   metadata?: JsonNullableFilter,
?   created_at?: DateTimeFilter | DateTime,
?   User?: UserNullableScalarRelationFilter | UserWhereInput | Null,
?   Staff?: StaffNullableScalarRelationFilter | StaffWhereInput | Null
  },
  orderBy: {
    createdAt: "desc"
  },
  select: {
    changes: true
  }
}

Unknown argument `tableName`. Did you mean `table_name`? Available options are marked with ?.
    at async GET (src/app/api/dev/stats/route.ts:13:26)
  11 |   try {
  12 |     // Get test coverage from recent test runs
> 13 |     const latestTestRun = await prisma.auditLog.findFirst({
     |                          ^
  14 |       where: {
  15 |         tableName: 'test_run',
  16 |         operation: 'CREATE' {
  clientVersion: '6.13.0'
}
 GET /api/dev/stats 500 in 6402ms
 GET /api/tests/generate 200 in 6453ms
 GET /api/tests/suites 200 in 6456ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 1230ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
Failed to fetch database stats: TypeError: Cannot read properties of undefined (reading 'count')
    at GET (src/app/api/dev/database/stats/route.ts:27:24)
  25 |       prisma.district.count(),
  26 |       prisma.meeting.count(),
> 27 |       prisma.agendaItem.count(),
     |                        ^
  28 |       prisma.auditLog.count(),
  29 |     ]);
  30 |     
 GET /api/dev/database/stats 500 in 13235ms
Failed to fetch database stats: TypeError: Cannot read properties of undefined (reading 'count')
    at GET (src/app/api/dev/database/stats/route.ts:27:24)
  25 |       prisma.district.count(),
  26 |       prisma.meeting.count(),
> 27 |       prisma.agendaItem.count(),
     |                        ^
  28 |       prisma.auditLog.count(),
  29 |     ]);
  30 |     
 GET /api/dev/database/stats 500 in 13393ms
 GET /api/dev/database/backups 200 in 13439ms
 GET /api/dev/database/backups 200 in 13453ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
Failed to fetch metrics: Error [PrismaClientValidationError]: 
Invalid `prisma.auditLog.findMany()` invocation:

{
  where: {
    createdAt: {
    ~~~~~~~~~
      gte: new Date("2025-08-05T16:01:11.659Z")
    },
?   AND?: AuditLogWhereInput | AuditLogWhereInput[],
?   OR?: AuditLogWhereInput[],
?   NOT?: AuditLogWhereInput | AuditLogWhereInput[],
?   id?: IntFilter | Int,
?   table_name?: StringFilter | String,
?   record_id?: StringFilter | String,
?   operation?: StringFilter | String,
?   field_changes?: JsonNullableFilter,
?   old_values?: JsonNullableFilter,
?   new_values?: JsonNullableFilter,
?   user_id?: IntNullableFilter | Int | Null,
?   staff_id?: IntNullableFilter | Int | Null,
?   source?: StringFilter | String,
?   description?: StringNullableFilter | String | Null,
?   ip_address?: StringNullableFilter | String | Null,
?   user_agent?: StringNullableFilter | String | Null,
?   metadata?: JsonNullableFilter,
?   created_at?: DateTimeFilter | DateTime,
?   User?: UserNullableScalarRelationFilter | UserWhereInput | Null,
?   Staff?: StaffNullableScalarRelationFilter | StaffWhereInput | Null
  },
  select: {
    operation: true,
    tableName: true,
    createdAt: true
  }
}

Unknown argument `createdAt`. Did you mean `created_at`? Available options are marked with ?.
    at async GET (src/app/api/dev/metrics/route.ts:25:23)
  23 |     
  24 |     // Get application metrics from recent audit logs
> 25 |     const recentLogs = await prisma.auditLog.findMany({
     |                       ^
  26 |       where: {
  27 |         createdAt: {
  28 |           gte: new Date(Date.now() - 60000) // Last minute {
  clientVersion: '6.13.0'
}
 GET /api/dev/metrics 500 in 1224ms
Failed to fetch metrics: Error [PrismaClientValidationError]: 
Invalid `prisma.auditLog.findMany()` invocation:

{
  where: {
    createdAt: {
    ~~~~~~~~~
      gte: new Date("2025-08-05T16:01:11.661Z")
    },
?   AND?: AuditLogWhereInput | AuditLogWhereInput[],
?   OR?: AuditLogWhereInput[],
?   NOT?: AuditLogWhereInput | AuditLogWhereInput[],
?   id?: IntFilter | Int,
?   table_name?: StringFilter | String,
?   record_id?: StringFilter | String,
?   operation?: StringFilter | String,
?   field_changes?: JsonNullableFilter,
?   old_values?: JsonNullableFilter,
?   new_values?: JsonNullableFilter,
?   user_id?: IntNullableFilter | Int | Null,
?   staff_id?: IntNullableFilter | Int | Null,
?   source?: StringFilter | String,
?   description?: StringNullableFilter | String | Null,
?   ip_address?: StringNullableFilter | String | Null,
?   user_agent?: StringNullableFilter | String | Null,
?   metadata?: JsonNullableFilter,
?   created_at?: DateTimeFilter | DateTime,
?   User?: UserNullableScalarRelationFilter | UserWhereInput | Null,
?   Staff?: StaffNullableScalarRelationFilter | StaffWhereInput | Null
  },
  select: {
    operation: true,
    tableName: true,
    createdAt: true
  }
}

Unknown argument `createdAt`. Did you mean `created_at`? Available options are marked with ?.
    at async GET (src/app/api/dev/metrics/route.ts:25:23)
  23 |     
  24 |     // Get application metrics from recent audit logs
> 25 |     const recentLogs = await prisma.auditLog.findMany({
     |                       ^
  26 |       where: {
  27 |         createdAt: {
  28 |           gte: new Date(Date.now() - 60000) // Last minute {
  clientVersion: '6.13.0'
}
 GET /api/dev/metrics 500 in 6690ms
Failed to fetch metrics: Error [PrismaClientValidationError]: 
Invalid `prisma.auditLog.findMany()` invocation:

{
  where: {
    createdAt: {
    ~~~~~~~~~
      gte: new Date("2025-08-05T16:01:11.661Z")
    },
?   AND?: AuditLogWhereInput | AuditLogWhereInput[],
?   OR?: AuditLogWhereInput[],
?   NOT?: AuditLogWhereInput | AuditLogWhereInput[],
?   id?: IntFilter | Int,
?   table_name?: StringFilter | String,
?   record_id?: StringFilter | String,
?   operation?: StringFilter | String,
?   field_changes?: JsonNullableFilter,
?   old_values?: JsonNullableFilter,
?   new_values?: JsonNullableFilter,
?   user_id?: IntNullableFilter | Int | Null,
?   staff_id?: IntNullableFilter | Int | Null,
?   source?: StringFilter | String,
?   description?: StringNullableFilter | String | Null,
?   ip_address?: StringNullableFilter | String | Null,
?   user_agent?: StringNullableFilter | String | Null,
?   metadata?: JsonNullableFilter,
?   created_at?: DateTimeFilter | DateTime,
?   User?: UserNullableScalarRelationFilter | UserWhereInput | Null,
?   Staff?: StaffNullableScalarRelationFilter | StaffWhereInput | Null
  },
  select: {
    operation: true,
    tableName: true,
    createdAt: true
  }
}

Unknown argument `createdAt`. Did you mean `created_at`? Available options are marked with ?.
    at async GET (src/app/api/dev/metrics/route.ts:25:23)
  23 |     
  24 |     // Get application metrics from recent audit logs
> 25 |     const recentLogs = await prisma.auditLog.findMany({
     |                       ^
  26 |       where: {
  27 |         createdAt: {
  28 |           gte: new Date(Date.now() - 60000) // Last minute {
  clientVersion: '6.13.0'
}
 GET /api/dev/metrics 500 in 6836ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
Failed to fetch logs: Error [PrismaClientValidationError]: 
Invalid `prisma.auditLog.findMany()` invocation:

{
  where: {},
  take: 100,
  skip: 0,
  orderBy: {
    createdAt: "desc",
    ~~~~~~~~~
?   id?: SortOrder,
?   table_name?: SortOrder,
?   record_id?: SortOrder,
?   operation?: SortOrder,
?   field_changes?: SortOrder | SortOrderInput,
?   old_values?: SortOrder | SortOrderInput,
?   new_values?: SortOrder | SortOrderInput,
?   user_id?: SortOrder | SortOrderInput,
?   staff_id?: SortOrder | SortOrderInput,
?   source?: SortOrder,
?   description?: SortOrder | SortOrderInput,
?   ip_address?: SortOrder | SortOrderInput,
?   user_agent?: SortOrder | SortOrderInput,
?   metadata?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   User?: UserOrderByWithRelationInput,
?   Staff?: StaffOrderByWithRelationInput
  },
  include: {
    user: {
      select: {
        id: true,
        email: true,
        name: true
      }
    },
    staff: {
      select: {
        id: true,
        first_name: true,
        last_name: true
      }
    }
  }
}

Unknown argument `createdAt`. Did you mean `created_at`? Available options are marked with ?.
    at async GET (src/app/api/dev/logs/route.ts:30:17)
  28 |
  29 |     // Fetch logs from audit_logs table
> 30 |     const logs = await prisma.auditLog.findMany({
     |                 ^
  31 |       where,
  32 |       take: limit,
  33 |       skip: offset, {
  clientVersion: '6.13.0'
}
 GET /api/dev/logs?level=all&context=all&limit=100&offset=0 500 in 2600ms
Failed to fetch logs: Error [PrismaClientValidationError]: 
Invalid `prisma.auditLog.findMany()` invocation:

{
  where: {},
  take: 100,
  skip: 0,
  orderBy: {
    createdAt: "desc",
    ~~~~~~~~~
?   id?: SortOrder,
?   table_name?: SortOrder,
?   record_id?: SortOrder,
?   operation?: SortOrder,
?   field_changes?: SortOrder | SortOrderInput,
?   old_values?: SortOrder | SortOrderInput,
?   new_values?: SortOrder | SortOrderInput,
?   user_id?: SortOrder | SortOrderInput,
?   staff_id?: SortOrder | SortOrderInput,
?   source?: SortOrder,
?   description?: SortOrder | SortOrderInput,
?   ip_address?: SortOrder | SortOrderInput,
?   user_agent?: SortOrder | SortOrderInput,
?   metadata?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   User?: UserOrderByWithRelationInput,
?   Staff?: StaffOrderByWithRelationInput
  },
  include: {
    user: {
      select: {
        id: true,
        email: true,
        name: true
      }
    },
    staff: {
      select: {
        id: true,
        first_name: true,
        last_name: true
      }
    }
  }
}

Unknown argument `createdAt`. Did you mean `created_at`? Available options are marked with ?.
    at async GET (src/app/api/dev/logs/route.ts:30:17)
  28 |
  29 |     // Fetch logs from audit_logs table
> 30 |     const logs = await prisma.auditLog.findMany({
     |                 ^
  31 |       where,
  32 |       take: limit,
  33 |       skip: offset, {
  clientVersion: '6.13.0'
}
 GET /api/dev/logs?level=all&context=all&limit=100&offset=0 500 in 2745ms
Failed to fetch logs: Error [PrismaClientValidationError]: 
Invalid `prisma.auditLog.findMany()` invocation:

{
  where: {},
  take: 100,
  skip: 0,
  orderBy: {
    createdAt: "desc",
    ~~~~~~~~~
?   id?: SortOrder,
?   table_name?: SortOrder,
?   record_id?: SortOrder,
?   operation?: SortOrder,
?   field_changes?: SortOrder | SortOrderInput,
?   old_values?: SortOrder | SortOrderInput,
?   new_values?: SortOrder | SortOrderInput,
?   user_id?: SortOrder | SortOrderInput,
?   staff_id?: SortOrder | SortOrderInput,
?   source?: SortOrder,
?   description?: SortOrder | SortOrderInput,
?   ip_address?: SortOrder | SortOrderInput,
?   user_agent?: SortOrder | SortOrderInput,
?   metadata?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   User?: UserOrderByWithRelationInput,
?   Staff?: StaffOrderByWithRelationInput
  },
  include: {
    user: {
      select: {
        id: true,
        email: true,
        name: true
      }
    },
    staff: {
      select: {
        id: true,
        first_name: true,
        last_name: true
      }
    }
  }
}

Unknown argument `createdAt`. Did you mean `created_at`? Available options are marked with ?.
    at async GET (src/app/api/dev/logs/route.ts:30:17)
  28 |
  29 |     // Fetch logs from audit_logs table
> 30 |     const logs = await prisma.auditLog.findMany({
     |                 ^
  31 |       where,
  32 |       take: limit,
  33 |       skip: offset, {
  clientVersion: '6.13.0'
}
 GET /api/dev/logs?level=all&context=all&limit=100&offset=0 500 in 2882ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
Failed to fetch test history: Error [PrismaClientValidationError]: 
Invalid `prisma.auditLog.findMany()` invocation:

{
  where: {
    tableName: "test_run",
    ~~~~~~~~~
    operation: "CREATE",
?   AND?: AuditLogWhereInput | AuditLogWhereInput[],
?   OR?: AuditLogWhereInput[],
?   NOT?: AuditLogWhereInput | AuditLogWhereInput[],
?   id?: IntFilter | Int,
?   table_name?: StringFilter | String,
?   record_id?: StringFilter | String,
?   field_changes?: JsonNullableFilter,
?   old_values?: JsonNullableFilter,
?   new_values?: JsonNullableFilter,
?   user_id?: IntNullableFilter | Int | Null,
?   staff_id?: IntNullableFilter | Int | Null,
?   source?: StringFilter | String,
?   description?: StringNullableFilter | String | Null,
?   ip_address?: StringNullableFilter | String | Null,
?   user_agent?: StringNullableFilter | String | Null,
?   metadata?: JsonNullableFilter,
?   created_at?: DateTimeFilter | DateTime,
?   User?: UserNullableScalarRelationFilter | UserWhereInput | Null,
?   Staff?: StaffNullableScalarRelationFilter | StaffWhereInput | Null
  },
  orderBy: {
    createdAt: "desc"
  },
  take: 30,
  select: {
    createdAt: true,
    changes: true
  }
}

Unknown argument `tableName`. Did you mean `table_name`? Available options are marked with ?.
    at async GET (src/app/api/tests/history/route.ts:14:21)
  12 |     // Get test history from audit logs or create a test_runs table in future
  13 |     // For now, we'll use audit logs to track test runs
> 14 |     const testLogs = await prisma.auditLog.findMany({
     |                     ^
  15 |       where: {
  16 |         tableName: 'test_run',
  17 |         operation: 'CREATE' {
  clientVersion: '6.13.0'
}
 GET /api/tests/history 500 in 5974ms
Failed to fetch test history: Error [PrismaClientValidationError]: 
Invalid `prisma.auditLog.findMany()` invocation:

{
  where: {
    tableName: "test_run",
    ~~~~~~~~~
    operation: "CREATE",
?   AND?: AuditLogWhereInput | AuditLogWhereInput[],
?   OR?: AuditLogWhereInput[],
?   NOT?: AuditLogWhereInput | AuditLogWhereInput[],
?   id?: IntFilter | Int,
?   table_name?: StringFilter | String,
?   record_id?: StringFilter | String,
?   field_changes?: JsonNullableFilter,
?   old_values?: JsonNullableFilter,
?   new_values?: JsonNullableFilter,
?   user_id?: IntNullableFilter | Int | Null,
?   staff_id?: IntNullableFilter | Int | Null,
?   source?: StringFilter | String,
?   description?: StringNullableFilter | String | Null,
?   ip_address?: StringNullableFilter | String | Null,
?   user_agent?: StringNullableFilter | String | Null,
?   metadata?: JsonNullableFilter,
?   created_at?: DateTimeFilter | DateTime,
?   User?: UserNullableScalarRelationFilter | UserWhereInput | Null,
?   Staff?: StaffNullableScalarRelationFilter | StaffWhereInput | Null
  },
  orderBy: {
    createdAt: "desc"
  },
  take: 30,
  select: {
    createdAt: true,
    changes: true
  }
}

Unknown argument `tableName`. Did you mean `table_name`? Available options are marked with ?.
    at async GET (src/app/api/tests/history/route.ts:14:21)
  12 |     // Get test history from audit logs or create a test_runs table in future
  13 |     // For now, we'll use audit logs to track test runs
> 14 |     const testLogs = await prisma.auditLog.findMany({
     |                     ^
  15 |       where: {
  16 |         tableName: 'test_run',
  17 |         operation: 'CREATE' {
  clientVersion: '6.13.0'
}
 GET /api/tests/history 500 in 6154ms
 GET /api/tests/generate 200 in 6162ms
 GET /api/tests/generate 200 in 6163ms
 GET /api/tests/suites 200 in 6164ms
 GET /api/tests/suites 200 in 6163ms
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 2565ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
Failed to fetch test history: Error [PrismaClientValidationError]: 
Invalid `prisma.auditLog.findMany()` invocation:

{
  where: {
    tableName: "test_run",
    ~~~~~~~~~
    operation: "CREATE",
?   AND?: AuditLogWhereInput | AuditLogWhereInput[],
?   OR?: AuditLogWhereInput[],
?   NOT?: AuditLogWhereInput | AuditLogWhereInput[],
?   id?: IntFilter | Int,
?   table_name?: StringFilter | String,
?   record_id?: StringFilter | String,
?   field_changes?: JsonNullableFilter,
?   old_values?: JsonNullableFilter,
?   new_values?: JsonNullableFilter,
?   user_id?: IntNullableFilter | Int | Null,
?   staff_id?: IntNullableFilter | Int | Null,
?   source?: StringFilter | String,
?   description?: StringNullableFilter | String | Null,
?   ip_address?: StringNullableFilter | String | Null,
?   user_agent?: StringNullableFilter | String | Null,
?   metadata?: JsonNullableFilter,
?   created_at?: DateTimeFilter | DateTime,
?   User?: UserNullableScalarRelationFilter | UserWhereInput | Null,
?   Staff?: StaffNullableScalarRelationFilter | StaffWhereInput | Null
  },
  orderBy: {
    createdAt: "desc"
  },
  take: 30,
  select: {
    createdAt: true,
    changes: true
  }
}

Unknown argument `tableName`. Did you mean `table_name`? Available options are marked with ?.
    at async GET (src/app/api/tests/history/route.ts:14:21)
  12 |     // Get test history from audit logs or create a test_runs table in future
  13 |     // For now, we'll use audit logs to track test runs
> 14 |     const testLogs = await prisma.auditLog.findMany({
     |                     ^
  15 |       where: {
  16 |         tableName: 'test_run',
  17 |         operation: 'CREATE' {
  clientVersion: '6.13.0'
}
 GET /api/tests/history 500 in 728ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 GET /api/auth/session 200 in 6928ms
 GET /api/tests/suites 200 in 6968ms
 GET /api/tests/generate 200 in 6991ms
Failed to fetch test history: Error [PrismaClientValidationError]: 
Invalid `prisma.auditLog.findMany()` invocation:

{
  where: {
    tableName: "test_run",
    ~~~~~~~~~
    operation: "CREATE",
?   AND?: AuditLogWhereInput | AuditLogWhereInput[],
?   OR?: AuditLogWhereInput[],
?   NOT?: AuditLogWhereInput | AuditLogWhereInput[],
?   id?: IntFilter | Int,
?   table_name?: StringFilter | String,
?   record_id?: StringFilter | String,
?   field_changes?: JsonNullableFilter,
?   old_values?: JsonNullableFilter,
?   new_values?: JsonNullableFilter,
?   user_id?: IntNullableFilter | Int | Null,
?   staff_id?: IntNullableFilter | Int | Null,
?   source?: StringFilter | String,
?   description?: StringNullableFilter | String | Null,
?   ip_address?: StringNullableFilter | String | Null,
?   user_agent?: StringNullableFilter | String | Null,
?   metadata?: JsonNullableFilter,
?   created_at?: DateTimeFilter | DateTime,
?   User?: UserNullableScalarRelationFilter | UserWhereInput | Null,
?   Staff?: StaffNullableScalarRelationFilter | StaffWhereInput | Null
  },
  orderBy: {
    createdAt: "desc"
  },
  take: 30,
  select: {
    createdAt: true,
    changes: true
  }
}

Unknown argument `tableName`. Did you mean `table_name`? Available options are marked with ?.
    at async GET (src/app/api/tests/history/route.ts:14:21)
  12 |     // Get test history from audit logs or create a test_runs table in future
  13 |     // For now, we'll use audit logs to track test runs
> 14 |     const testLogs = await prisma.auditLog.findMany({
     |                     ^
  15 |       where: {
  16 |         tableName: 'test_run',
  17 |         operation: 'CREATE' {
  clientVersion: '6.13.0'
}
 GET /api/tests/history 500 in 6329ms
Failed to fetch dev stats: Error [PrismaClientValidationError]: 
Invalid `prisma.auditLog.findFirst()` invocation:

{
  where: {
    tableName: "test_run",
    ~~~~~~~~~
    operation: "CREATE",
?   AND?: AuditLogWhereInput | AuditLogWhereInput[],
?   OR?: AuditLogWhereInput[],
?   NOT?: AuditLogWhereInput | AuditLogWhereInput[],
?   id?: IntFilter | Int,
?   table_name?: StringFilter | String,
?   record_id?: StringFilter | String,
?   field_changes?: JsonNullableFilter,
?   old_values?: JsonNullableFilter,
?   new_values?: JsonNullableFilter,
?   user_id?: IntNullableFilter | Int | Null,
?   staff_id?: IntNullableFilter | Int | Null,
?   source?: StringFilter | String,
?   description?: StringNullableFilter | String | Null,
?   ip_address?: StringNullableFilter | String | Null,
?   user_agent?: StringNullableFilter | String | Null,
?   metadata?: JsonNullableFilter,
?   created_at?: DateTimeFilter | DateTime,
?   User?: UserNullableScalarRelationFilter | UserWhereInput | Null,
?   Staff?: StaffNullableScalarRelationFilter | StaffWhereInput | Null
  },
  orderBy: {
    createdAt: "desc"
  },
  select: {
    changes: true
  }
}

Unknown argument `tableName`. Did you mean `table_name`? Available options are marked with ?.
    at async GET (src/app/api/dev/stats/route.ts:13:26)
  11 |   try {
  12 |     // Get test coverage from recent test runs
> 13 |     const latestTestRun = await prisma.auditLog.findFirst({
     |                          ^
  14 |       where: {
  15 |         tableName: 'test_run',
  16 |         operation: 'CREATE' {
  clientVersion: '6.13.0'
}
 GET /api/dev/stats 500 in 7651ms
 GET /api/tests/suites 200 in 7635ms
Failed to fetch dev stats: Error [PrismaClientValidationError]: 
Invalid `prisma.auditLog.findFirst()` invocation:

{
  where: {
    tableName: "test_run",
    ~~~~~~~~~
    operation: "CREATE",
?   AND?: AuditLogWhereInput | AuditLogWhereInput[],
?   OR?: AuditLogWhereInput[],
?   NOT?: AuditLogWhereInput | AuditLogWhereInput[],
?   id?: IntFilter | Int,
?   table_name?: StringFilter | String,
?   record_id?: StringFilter | String,
?   field_changes?: JsonNullableFilter,
?   old_values?: JsonNullableFilter,
?   new_values?: JsonNullableFilter,
?   user_id?: IntNullableFilter | Int | Null,
?   staff_id?: IntNullableFilter | Int | Null,
?   source?: StringFilter | String,
?   description?: StringNullableFilter | String | Null,
?   ip_address?: StringNullableFilter | String | Null,
?   user_agent?: StringNullableFilter | String | Null,
?   metadata?: JsonNullableFilter,
?   created_at?: DateTimeFilter | DateTime,
?   User?: UserNullableScalarRelationFilter | UserWhereInput | Null,
?   Staff?: StaffNullableScalarRelationFilter | StaffWhereInput | Null
  },
  orderBy: {
    createdAt: "desc"
  },
  select: {
    changes: true
  }
}

Unknown argument `tableName`. Did you mean `table_name`? Available options are marked with ?.
    at async GET (src/app/api/dev/stats/route.ts:13:26)
  11 |   try {
  12 |     // Get test coverage from recent test runs
> 13 |     const latestTestRun = await prisma.auditLog.findFirst({
     |                          ^
  14 |       where: {
  15 |         tableName: 'test_run',
  16 |         operation: 'CREATE' {
  clientVersion: '6.13.0'
}
 GET /api/dev/stats 500 in 1632ms
 GET /api/auth/session 200 in 1633ms
Failed to fetch test history: Error [PrismaClientValidationError]: 
Invalid `prisma.auditLog.findMany()` invocation:

{
  where: {
    tableName: "test_run",
    ~~~~~~~~~
    operation: "CREATE",
?   AND?: AuditLogWhereInput | AuditLogWhereInput[],
?   OR?: AuditLogWhereInput[],
?   NOT?: AuditLogWhereInput | AuditLogWhereInput[],
?   id?: IntFilter | Int,
?   table_name?: StringFilter | String,
?   record_id?: StringFilter | String,
?   field_changes?: JsonNullableFilter,
?   old_values?: JsonNullableFilter,
?   new_values?: JsonNullableFilter,
?   user_id?: IntNullableFilter | Int | Null,
?   staff_id?: IntNullableFilter | Int | Null,
?   source?: StringFilter | String,
?   description?: StringNullableFilter | String | Null,
?   ip_address?: StringNullableFilter | String | Null,
?   user_agent?: StringNullableFilter | String | Null,
?   metadata?: JsonNullableFilter,
?   created_at?: DateTimeFilter | DateTime,
?   User?: UserNullableScalarRelationFilter | UserWhereInput | Null,
?   Staff?: StaffNullableScalarRelationFilter | StaffWhereInput | Null
  },
  orderBy: {
    createdAt: "desc"
  },
  take: 30,
  select: {
    createdAt: true,
    changes: true
  }
}

Unknown argument `tableName`. Did you mean `table_name`? Available options are marked with ?.
    at async GET (src/app/api/tests/history/route.ts:14:21)
  12 |     // Get test history from audit logs or create a test_runs table in future
  13 |     // For now, we'll use audit logs to track test runs
> 14 |     const testLogs = await prisma.auditLog.findMany({
     |                     ^
  15 |       where: {
  16 |         tableName: 'test_run',
  17 |         operation: 'CREATE' {
  clientVersion: '6.13.0'
}
 GET /api/tests/history 500 in 1865ms
 GET /api/tests/generate 200 in 2202ms
 GET /api/tests/suites 200 in 2180ms
 GET /api/tests/generate 200 in 2080ms
Failed to fetch dev stats: Error [PrismaClientValidationError]: 
Invalid `prisma.auditLog.findFirst()` invocation:

{
  where: {
    tableName: "test_run",
    ~~~~~~~~~
    operation: "CREATE",
?   AND?: AuditLogWhereInput | AuditLogWhereInput[],
?   OR?: AuditLogWhereInput[],
?   NOT?: AuditLogWhereInput | AuditLogWhereInput[],
?   id?: IntFilter | Int,
?   table_name?: StringFilter | String,
?   record_id?: StringFilter | String,
?   field_changes?: JsonNullableFilter,
?   old_values?: JsonNullableFilter,
?   new_values?: JsonNullableFilter,
?   user_id?: IntNullableFilter | Int | Null,
?   staff_id?: IntNullableFilter | Int | Null,
?   source?: StringFilter | String,
?   description?: StringNullableFilter | String | Null,
?   ip_address?: StringNullableFilter | String | Null,
?   user_agent?: StringNullableFilter | String | Null,
?   metadata?: JsonNullableFilter,
?   created_at?: DateTimeFilter | DateTime,
?   User?: UserNullableScalarRelationFilter | UserWhereInput | Null,
?   Staff?: StaffNullableScalarRelationFilter | StaffWhereInput | Null
  },
  orderBy: {
    createdAt: "desc"
  },
  select: {
    changes: true
  }
}

Unknown argument `tableName`. Did you mean `table_name`? Available options are marked with ?.
    at async GET (src/app/api/dev/stats/route.ts:13:26)
  11 |   try {
  12 |     // Get test coverage from recent test runs
> 13 |     const latestTestRun = await prisma.auditLog.findFirst({
     |                          ^
  14 |       where: {
  15 |         tableName: 'test_run',
  16 |         operation: 'CREATE' {
  clientVersion: '6.13.0'
}
 GET /api/dev/stats 500 in 397ms
Failed to fetch database stats: TypeError: Cannot read properties of undefined (reading 'count')
    at GET (src/app/api/dev/database/stats/route.ts:27:24)
  25 |       prisma.district.count(),
  26 |       prisma.meeting.count(),
> 27 |       prisma.agendaItem.count(),
     |                        ^
  28 |       prisma.auditLog.count(),
  29 |     ]);
  30 |     
 GET /api/dev/database/stats 500 in 519ms
 GET /api/auth/session 200 in 539ms
 GET /api/dev/database/backups 200 in 513ms
Failed to fetch database stats: TypeError: Cannot read properties of undefined (reading 'count')
    at GET (src/app/api/dev/database/stats/route.ts:27:24)
  25 |       prisma.district.count(),
  26 |       prisma.meeting.count(),
> 27 |       prisma.agendaItem.count(),
     |                        ^
  28 |       prisma.auditLog.count(),
  29 |     ]);
  30 |     
 GET /api/dev/database/stats 500 in 624ms
 GET /api/dev/database/backups 200 in 604ms
Failed to fetch metrics: Error [PrismaClientValidationError]: 
Invalid `prisma.auditLog.findMany()` invocation:

{
  where: {
    createdAt: {
    ~~~~~~~~~
      gte: new Date("2025-08-05T16:01:36.318Z")
    },
?   AND?: AuditLogWhereInput | AuditLogWhereInput[],
?   OR?: AuditLogWhereInput[],
?   NOT?: AuditLogWhereInput | AuditLogWhereInput[],
?   id?: IntFilter | Int,
?   table_name?: StringFilter | String,
?   record_id?: StringFilter | String,
?   operation?: StringFilter | String,
?   field_changes?: JsonNullableFilter,
?   old_values?: JsonNullableFilter,
?   new_values?: JsonNullableFilter,
?   user_id?: IntNullableFilter | Int | Null,
?   staff_id?: IntNullableFilter | Int | Null,
?   source?: StringFilter | String,
?   description?: StringNullableFilter | String | Null,
?   ip_address?: StringNullableFilter | String | Null,
?   user_agent?: StringNullableFilter | String | Null,
?   metadata?: JsonNullableFilter,
?   created_at?: DateTimeFilter | DateTime,
?   User?: UserNullableScalarRelationFilter | UserWhereInput | Null,
?   Staff?: StaffNullableScalarRelationFilter | StaffWhereInput | Null
  },
  select: {
    operation: true,
    tableName: true,
    createdAt: true
  }
}

Unknown argument `createdAt`. Did you mean `created_at`? Available options are marked with ?.
    at async GET (src/app/api/dev/metrics/route.ts:25:23)
  23 |     
  24 |     // Get application metrics from recent audit logs
> 25 |     const recentLogs = await prisma.auditLog.findMany({
     |                       ^
  26 |       where: {
  27 |         createdAt: {
  28 |           gte: new Date(Date.now() - 60000) // Last minute {
  clientVersion: '6.13.0'
}
 GET /api/dev/metrics 500 in 340ms
Failed to fetch logs: Error [PrismaClientValidationError]: 
Invalid `prisma.auditLog.findMany()` invocation:

{
  where: {},
  take: 100,
  skip: 0,
  orderBy: {
    createdAt: "desc",
    ~~~~~~~~~
?   id?: SortOrder,
?   table_name?: SortOrder,
?   record_id?: SortOrder,
?   operation?: SortOrder,
?   field_changes?: SortOrder | SortOrderInput,
?   old_values?: SortOrder | SortOrderInput,
?   new_values?: SortOrder | SortOrderInput,
?   user_id?: SortOrder | SortOrderInput,
?   staff_id?: SortOrder | SortOrderInput,
?   source?: SortOrder,
?   description?: SortOrder | SortOrderInput,
?   ip_address?: SortOrder | SortOrderInput,
?   user_agent?: SortOrder | SortOrderInput,
?   metadata?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   User?: UserOrderByWithRelationInput,
?   Staff?: StaffOrderByWithRelationInput
  },
  include: {
    user: {
      select: {
        id: true,
        email: true,
        name: true
      }
    },
    staff: {
      select: {
        id: true,
        first_name: true,
        last_name: true
      }
    }
  }
}

Unknown argument `createdAt`. Did you mean `created_at`? Available options are marked with ?.
    at async GET (src/app/api/dev/logs/route.ts:30:17)
  28 |
  29 |     // Fetch logs from audit_logs table
> 30 |     const logs = await prisma.auditLog.findMany({
     |                 ^
  31 |       where,
  32 |       take: limit,
  33 |       skip: offset, {
  clientVersion: '6.13.0'
}
 GET /api/dev/logs?level=all&context=all&limit=100&offset=0 500 in 546ms
Failed to fetch metrics: Error [PrismaClientValidationError]: 
Invalid `prisma.auditLog.findMany()` invocation:

{
  where: {
    createdAt: {
    ~~~~~~~~~
      gte: new Date("2025-08-05T16:01:36.841Z")
    },
?   AND?: AuditLogWhereInput | AuditLogWhereInput[],
?   OR?: AuditLogWhereInput[],
?   NOT?: AuditLogWhereInput | AuditLogWhereInput[],
?   id?: IntFilter | Int,
?   table_name?: StringFilter | String,
?   record_id?: StringFilter | String,
?   operation?: StringFilter | String,
?   field_changes?: JsonNullableFilter,
?   old_values?: JsonNullableFilter,
?   new_values?: JsonNullableFilter,
?   user_id?: IntNullableFilter | Int | Null,
?   staff_id?: IntNullableFilter | Int | Null,
?   source?: StringFilter | String,
?   description?: StringNullableFilter | String | Null,
?   ip_address?: StringNullableFilter | String | Null,
?   user_agent?: StringNullableFilter | String | Null,
?   metadata?: JsonNullableFilter,
?   created_at?: DateTimeFilter | DateTime,
?   User?: UserNullableScalarRelationFilter | UserWhereInput | Null,
?   Staff?: StaffNullableScalarRelationFilter | StaffWhereInput | Null
  },
  select: {
    operation: true,
    tableName: true,
    createdAt: true
  }
}

Unknown argument `createdAt`. Did you mean `created_at`? Available options are marked with ?.
    at async GET (src/app/api/dev/metrics/route.ts:25:23)
  23 |     
  24 |     // Get application metrics from recent audit logs
> 25 |     const recentLogs = await prisma.auditLog.findMany({
     |                       ^
  26 |       where: {
  27 |         createdAt: {
  28 |           gte: new Date(Date.now() - 60000) // Last minute {
  clientVersion: '6.13.0'
}
 GET /api/dev/metrics 500 in 833ms
Failed to fetch logs: Error [PrismaClientValidationError]: 
Invalid `prisma.auditLog.findMany()` invocation:

{
  where: {},
  take: 100,
  skip: 0,
  orderBy: {
    createdAt: "desc",
    ~~~~~~~~~
?   id?: SortOrder,
?   table_name?: SortOrder,
?   record_id?: SortOrder,
?   operation?: SortOrder,
?   field_changes?: SortOrder | SortOrderInput,
?   old_values?: SortOrder | SortOrderInput,
?   new_values?: SortOrder | SortOrderInput,
?   user_id?: SortOrder | SortOrderInput,
?   staff_id?: SortOrder | SortOrderInput,
?   source?: SortOrder,
?   description?: SortOrder | SortOrderInput,
?   ip_address?: SortOrder | SortOrderInput,
?   user_agent?: SortOrder | SortOrderInput,
?   metadata?: SortOrder | SortOrderInput,
?   created_at?: SortOrder,
?   User?: UserOrderByWithRelationInput,
?   Staff?: StaffOrderByWithRelationInput
  },
  include: {
    user: {
      select: {
        id: true,
        email: true,
        name: true
      }
    },
    staff: {
      select: {
        id: true,
        first_name: true,
        last_name: true
      }
    }
  }
}

Unknown argument `createdAt`. Did you mean `created_at`? Available options are marked with ?.
    at async GET (src/app/api/dev/logs/route.ts:30:17)
  28 |
  29 |     // Fetch logs from audit_logs table
> 30 |     const logs = await prisma.auditLog.findMany({
     |                 ^
  31 |       where,
  32 |       take: limit,
  33 |       skip: offset, {
  clientVersion: '6.13.0'
}
 GET /api/dev/logs?level=all&context=all&limit=100&offset=0 500 in 963ms
 GET /api/tests/suites 200 in 999ms
Failed to fetch test history: Error [PrismaClientValidationError]: 
Invalid `prisma.auditLog.findMany()` invocation:

{
  where: {
    tableName: "test_run",
    ~~~~~~~~~
    operation: "CREATE",
?   AND?: AuditLogWhereInput | AuditLogWhereInput[],
?   OR?: AuditLogWhereInput[],
?   NOT?: AuditLogWhereInput | AuditLogWhereInput[],
?   id?: IntFilter | Int,
?   table_name?: StringFilter | String,
?   record_id?: StringFilter | String,
?   field_changes?: JsonNullableFilter,
?   old_values?: JsonNullableFilter,
?   new_values?: JsonNullableFilter,
?   user_id?: IntNullableFilter | Int | Null,
?   staff_id?: IntNullableFilter | Int | Null,
?   source?: StringFilter | String,
?   description?: StringNullableFilter | String | Null,
?   ip_address?: StringNullableFilter | String | Null,
?   user_agent?: StringNullableFilter | String | Null,
?   metadata?: JsonNullableFilter,
?   created_at?: DateTimeFilter | DateTime,
?   User?: UserNullableScalarRelationFilter | UserWhereInput | Null,
?   Staff?: StaffNullableScalarRelationFilter | StaffWhereInput | Null
  },
  orderBy: {
    createdAt: "desc"
  },
  take: 30,
  select: {
    createdAt: true,
    changes: true
  }
}

Unknown argument `tableName`. Did you mean `table_name`? Available options are marked with ?.
    at async GET (src/app/api/tests/history/route.ts:14:21)
  12 |     // Get test history from audit logs or create a test_runs table in future
  13 |     // For now, we'll use audit logs to track test runs
> 14 |     const testLogs = await prisma.auditLog.findMany({
     |                     ^
  15 |       where: {
  16 |         tableName: 'test_run',
  17 |         operation: 'CREATE' {
  clientVersion: '6.13.0'
}
 GET /api/tests/history 500 in 634ms
 GET /api/tests/generate 200 in 304ms
Failed to fetch test history: Error [PrismaClientValidationError]: 
Invalid `prisma.auditLog.findMany()` invocation:

{
  where: {
    tableName: "test_run",
    ~~~~~~~~~
    operation: "CREATE",
?   AND?: AuditLogWhereInput | AuditLogWhereInput[],
?   OR?: AuditLogWhereInput[],
?   NOT?: AuditLogWhereInput | AuditLogWhereInput[],
?   id?: IntFilter | Int,
?   table_name?: StringFilter | String,
?   record_id?: StringFilter | String,
?   field_changes?: JsonNullableFilter,
?   old_values?: JsonNullableFilter,
?   new_values?: JsonNullableFilter,
?   user_id?: IntNullableFilter | Int | Null,
?   staff_id?: IntNullableFilter | Int | Null,
?   source?: StringFilter | String,
?   description?: StringNullableFilter | String | Null,
?   ip_address?: StringNullableFilter | String | Null,
?   user_agent?: StringNullableFilter | String | Null,
?   metadata?: JsonNullableFilter,
?   created_at?: DateTimeFilter | DateTime,
?   User?: UserNullableScalarRelationFilter | UserWhereInput | Null,
?   Staff?: StaffNullableScalarRelationFilter | StaffWhereInput | Null
  },
  orderBy: {
    createdAt: "desc"
  },
  take: 30,
  select: {
    createdAt: true,
    changes: true
  }
}

Unknown argument `tableName`. Did you mean `table_name`? Available options are marked with ?.
    at async GET (src/app/api/tests/history/route.ts:14:21)
  12 |     // Get test history from audit logs or create a test_runs table in future
  13 |     // For now, we'll use audit logs to track test runs
> 14 |     const testLogs = await prisma.auditLog.findMany({
     |                     ^
  15 |       where: {
  16 |         tableName: 'test_run',
  17 |         operation: 'CREATE' {
  clientVersion: '6.13.0'
}
 GET /api/tests/history 500 in 245ms
 GET /api/tests/suites 200 in 481ms
 GET /api/tests/generate 200 in 285ms
 ⚠ Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
EdgeAuditLogger: Could not determine client IP address from headers
EdgeAuditLogger: Could not determine client IP address from headers
EdgeAuditLogger: Could not determine client IP address from headers
EdgeAuditLogger: Could not determine client IP address from headers
EdgeAuditLogger: Could not determine client IP address from headers
EdgeAuditLogger: Could not determine client IP address from headers
EdgeAuditLogger: Could not determine client IP address from headers
EdgeAuditLogger: Could not determine client IP address from headers
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 31690ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 POST /api/auth/_log 200 in 66568ms
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 ⚠ ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/global-error.tsx

./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./src/app/not-found.tsx
 GET /api/auth/session 200 in 39507ms
 GET /api/tests/generate 200 in 39673ms
 GET /api/tests/suites 200 in 39683ms
 GET /api/tests/suites 200 in 6211ms
 GET /api/tests/generate 200 in 75ms
 GET /api/auth/session 200 in 60ms
Failed to fetch dev stats: Error [PrismaClientValidationError]: 
Invalid `prisma.auditLog.findFirst()` invocation:

{
  where: {
    tableName: "test_run",
    ~~~~~~~~~
    operation: "CREATE",
?   AND?: AuditLogWhereInput | AuditLogWhereInput[],
?   OR?: AuditLogWhereInput[],
?   NOT?: AuditLogWhereInput | AuditLogWhereInput[],
?   id?: IntFilter | Int,
?   table_name?: StringFilter | String,
?   record_id?: StringFilter | String,
?   field_changes?: JsonNullableFilter,
?   old_values?: JsonNullableFilter,
?   new_values?: JsonNullableFilter,
?   user_id?: IntNullableFilter | Int | Null,
?   staff_id?: IntNullableFilter | Int | Null,
?   source?: StringFilter | String,
?   description?: StringNullableFilter | String | Null,
?   ip_address?: StringNullableFilter | String | Null,
?   user_agent?: StringNullableFilter | String | Null,
?   metadata?: JsonNullableFilter,
?   created_at?: DateTimeFilter | DateTime,
?   User?: UserNullableScalarRelationFilter | UserWhereInput | Null,
?   Staff?: StaffNullableScalarRelationFilter | StaffWhereInput | Null
  },
  orderBy: {
    createdAt: "desc"
  },
  select: {
    changes: true
  }
}

Unknown argument `tableName`. Did you mean `table_name`? Available options are marked with ?.
    at async GET (src/app/api/dev/stats/route.ts:13:26)
  11 |   try {
  12 |     // Get test coverage from recent test runs
> 13 |     const latestTestRun = await prisma.auditLog.findFirst({
     |                          ^
  14 |       where: {
  15 |         tableName: 'test_run',
  16 |         operation: 'CREATE' {
  clientVersion: '6.13.0'
}
 GET /api/dev/stats 500 in 40356ms
Failed to fetch test history: Error [PrismaClientValidationError]: 
Invalid `prisma.auditLog.findMany()` invocation:

{
  where: {
    tableName: "test_run",
    ~~~~~~~~~
    operation: "CREATE",
?   AND?: AuditLogWhereInput | AuditLogWhereInput[],
?   OR?: AuditLogWhereInput[],
?   NOT?: AuditLogWhereInput | AuditLogWhereInput[],
?   id?: IntFilter | Int,
?   table_name?: StringFilter | String,
?   record_id?: StringFilter | String,
?   field_changes?: JsonNullableFilter,
?   old_values?: JsonNullableFilter,
?   new_values?: JsonNullableFilter,
?   user_id?: IntNullableFilter | Int | Null,
?   staff_id?: IntNullableFilter | Int | Null,
?   source?: StringFilter | String,
?   description?: StringNullableFilter | String | Null,
?   ip_address?: StringNullableFilter | String | Null,
?   user_agent?: StringNullableFilter | String | Null,
?   metadata?: JsonNullableFilter,
?   created_at?: DateTimeFilter | DateTime,
?   User?: UserNullableScalarRelationFilter | UserWhereInput | Null,
?   Staff?: StaffNullableScalarRelationFilter | StaffWhereInput | Null
  },
  orderBy: {
    createdAt: "desc"
  },
  take: 30,
  select: {
    createdAt: true,
    changes: true
  }
}

Unknown argument `tableName`. Did you mean `table_name`? Available options are marked with ?.
    at async GET (src/app/api/tests/history/route.ts:14:21)
  12 |     // Get test history from audit logs or create a test_runs table in future
  13 |     // For now, we'll use audit logs to track test runs
> 14 |     const testLogs = await prisma.auditLog.findMany({
     |                     ^
  15 |       where: {
  16 |         tableName: 'test_run',
  17 |         operation: 'CREATE' {
  clientVersion: '6.13.0'
}
 GET /api/tests/history 500 in 40464ms
Failed to fetch test history: Error [PrismaClientValidationError]: 
Invalid `prisma.auditLog.findMany()` invocation:

{
  where: {
    tableName: "test_run",
    ~~~~~~~~~
    operation: "CREATE",
?   AND?: AuditLogWhereInput | AuditLogWhereInput[],
?   OR?: AuditLogWhereInput[],
?   NOT?: AuditLogWhereInput | AuditLogWhereInput[],
?   id?: IntFilter | Int,
?   table_name?: StringFilter | String,
?   record_id?: StringFilter | String,
?   field_changes?: JsonNullableFilter,
?   old_values?: JsonNullableFilter,
?   new_values?: JsonNullableFilter,
?   user_id?: IntNullableFilter | Int | Null,
?   staff_id?: IntNullableFilter | Int | Null,
?   source?: StringFilter | String,
?   description?: StringNullableFilter | String | Null,
?   ip_address?: StringNullableFilter | String | Null,
?   user_agent?: StringNullableFilter | String | Null,
?   metadata?: JsonNullableFilter,
?   created_at?: DateTimeFilter | DateTime,
?   User?: UserNullableScalarRelationFilter | UserWhereInput | Null,
?   Staff?: StaffNullableScalarRelationFilter | StaffWhereInput | Null
  },
  orderBy: {
    createdAt: "desc"
  },
  take: 30,
  select: {
    createdAt: true,
    changes: true
  }
}

Unknown argument `tableName`. Did you mean `table_name`? Available options are marked with ?.
    at async GET (src/app/api/tests/history/route.ts:14:21)
  12 |     // Get test history from audit logs or create a test_runs table in future
  13 |     // For now, we'll use audit logs to track test runs
> 14 |     const testLogs = await prisma.auditLog.findMany({
     |                     ^
  15 |       where: {
  16 |         tableName: 'test_run',
  17 |         operation: 'CREATE' {
  clientVersion: '6.13.0'
}
 GET /api/tests/history 500 in 874ms
Failed to fetch test history: Error [PrismaClientValidationError]: 
Invalid `prisma.auditLog.findMany()` invocation:

{
  where: {
    tableName: "test_run",
    ~~~~~~~~~
    operation: "CREATE",
?   AND?: AuditLogWhereInput | AuditLogWhereInput[],
?   OR?: AuditLogWhereInput[],
?   NOT?: AuditLogWhereInput | AuditLogWhereInput[],
?   id?: IntFilter | Int,
?   table_name?: StringFilter | String,
?   record_id?: StringFilter | String,
?   field_changes?: JsonNullableFilter,
?   old_values?: JsonNullableFilter,
?   new_values?: JsonNullableFilter,
?   user_id?: IntNullableFilter | Int | Null,
?   staff_id?: IntNullableFilter | Int | Null,
?   source?: StringFilter | String,
?   description?: StringNullableFilter | String | Null,
?   ip_address?: StringNullableFilter | String | Null,
?   user_agent?: StringNullableFilter | String | Null,
?   metadata?: JsonNullableFilter,
?   created_at?: DateTimeFilter | DateTime,
?   User?: UserNullableScalarRelationFilter | UserWhereInput | Null,
?   Staff?: StaffNullableScalarRelationFilter | StaffWhereInput | Null
  },
  orderBy: {
    createdAt: "desc"
  },
  take: 30,
  select: {
    createdAt: true,
    changes: true
  }
}

Unknown argument `tableName`. Did you mean `table_name`? Available options are marked with ?.
    at async GET (src/app/api/tests/history/route.ts:14:21)
  12 |     // Get test history from audit logs or create a test_runs table in future
  13 |     // For now, we'll use audit logs to track test runs
> 14 |     const testLogs = await prisma.auditLog.findMany({
     |                     ^
  15 |       where: {
  16 |         tableName: 'test_run',
  17 |         operation: 'CREATE' {
  clientVersion: '6.13.0'
}
 GET /api/tests/history 500 in 897ms
 GET /api/tests/suites 200 in 974ms
Failed to fetch dev stats: Error [PrismaClientValidationError]: 
Invalid `prisma.auditLog.findFirst()` invocation:

{
  where: {
    tableName: "test_run",
    ~~~~~~~~~
    operation: "CREATE",
?   AND?: AuditLogWhereInput | AuditLogWhereInput[],
?   OR?: AuditLogWhereInput[],
?   NOT?: AuditLogWhereInput | AuditLogWhereInput[],
?   id?: IntFilter | Int,
?   table_name?: StringFilter | String,
?   record_id?: StringFilter | String,
?   field_changes?: JsonNullableFilter,
?   old_values?: JsonNullableFilter,
?   new_values?: JsonNullableFilter,
?   user_id?: IntNullableFilter | Int | Null,
?   staff_id?: IntNullableFilter | Int | Null,
?   source?: StringFilter | String,
?   description?: StringNullableFilter | String | Null,
?   ip_address?: StringNullableFilter | String | Null,
?   user_agent?: StringNullableFilter | String | Null,
?   metadata?: JsonNullableFilter,
?   created_at?: DateTimeFilter | DateTime,
?   User?: UserNullableScalarRelationFilter | UserWhereInput | Null,
?   Staff?: StaffNullableScalarRelationFilter | StaffWhereInput | Null
  },
  orderBy: {
    createdAt: "desc"
  },
  select: {
    changes: true
  }
}

Unknown argument `tableName`. Did you mean `table_name`? Available options are marked with ?.
    at async GET (src/app/api/dev/stats/route.ts:13:26)
  11 |   try {
  12 |     // Get test coverage from recent test runs
> 13 |     const latestTestRun = await prisma.auditLog.findFirst({
     |                          ^
  14 |       where: {
  15 |         tableName: 'test_run',
  16 |         operation: 'CREATE' {
  clientVersion: '6.13.0'
}
 GET /api/dev/stats 500 in 282ms
 GET /api/auth/session 200 in 272ms
 GET /api/tests/generate 200 in 303ms
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
Failed to fetch dev stats: Error [PrismaClientValidationError]: 
Invalid `prisma.auditLog.findFirst()` invocation:

{
  where: {
    tableName: "test_run",
    ~~~~~~~~~
    operation: "CREATE",
?   AND?: AuditLogWhereInput | AuditLogWhereInput[],
?   OR?: AuditLogWhereInput[],
?   NOT?: AuditLogWhereInput | AuditLogWhereInput[],
?   id?: IntFilter | Int,
?   table_name?: StringFilter | String,
?   record_id?: StringFilter | String,
?   field_changes?: JsonNullableFilter,
?   old_values?: JsonNullableFilter,
?   new_values?: JsonNullableFilter,
?   user_id?: IntNullableFilter | Int | Null,
?   staff_id?: IntNullableFilter | Int | Null,
?   source?: StringFilter | String,
?   description?: StringNullableFilter | String | Null,
?   ip_address?: StringNullableFilter | String | Null,
?   user_agent?: StringNullableFilter | String | Null,
?   metadata?: JsonNullableFilter,
?   created_at?: DateTimeFilter | DateTime,
?   User?: UserNullableScalarRelationFilter | UserWhereInput | Null,
?   Staff?: StaffNullableScalarRelationFilter | StaffWhereInput | Null
  },
  orderBy: {
    createdAt: "desc"
  },
  select: {
    changes: true
  }
}

Unknown argument `tableName`. Did you mean `table_name`? Available options are marked with ?.
    at async GET (src/app/api/dev/stats/route.ts:13:26)
  11 |   try {
  12 |     // Get test coverage from recent test runs
> 13 |     const latestTestRun = await prisma.auditLog.findFirst({
     |                          ^
  14 |       where: {
  15 |         tableName: 'test_run',
  16 |         operation: 'CREATE' {
  clientVersion: '6.13.0'
}
 GET /api/dev/stats 500 in 2976ms
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⨯ Error: Event handlers cannot be passed to Client Component props.
  <button onClick={function onClick} className=... children=...>
                  ^^^^^^^^^^^^^^^^^^
If you need interactivity, consider converting part of this to a Client Component.
    at stringify (<anonymous>)
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '544169516'
}
 ⚠ Unsupported metadata themeColor is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata viewport is configured in metadata export in /dashboard/development. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /dashboard/development 200 in 2677ms
 GET /dashboard/development 200 in 624ms
