{
  "name": "agendaiq",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "NODE_NO_WARNINGS=1 next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "type-check": "tsc --noEmit",
    "test": "jest",
    "test:unit": "jest src/__tests__/unit",
    "test:integration": "jest tests/integration",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:e2e": "playwright test tests/e2e",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:headed": "playwright test --headed",
    "test:security": "jest tests/integration/auth-api.test.ts",
    "test:performance": "playwright test tests/e2e --grep performance",
    "test:smoke": "playwright test --grep @smoke",
    "test:all": "npm run lint && npm run type-check && npm run test && npm run test:e2e",
    "test:comprehensive": "node scripts/run-tests.js",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "clean": "rm -rf .next node_modules coverage",
    "clean:cache": "rm -rf .next/cache",
    "analyze": "ANALYZE=true npm run build",
    "deploy:vercel": "vercel --prod",
    "deploy:preview": "vercel",
    "db:push": "prisma db push",
    "db:migrate": "prisma migrate dev",
    "db:seed": "prisma db seed",
    "db:reset": "echo '⛔ DATABASE RESET IS FORBIDDEN! See CLAUDE.md for policy.' && echo '💡 Use: npm run db:migrate instead' && exit 1",
    "db:reset:force": "echo '🚨 CRITICAL WARNING: This will DELETE ALL DATA!' && echo '📋 Required confirmation: Type DESTROY_ALL_DATA_$(date +%Y%m%d)' && read -p 'Confirmation code: ' confirm && [ \"$confirm\" = \"DESTROY_ALL_DATA_$(date +%Y%m%d)\" ] && echo '⏳ Creating backup first...' && node scripts/backup-database.js && prisma migrate reset || echo '❌ Aborted - backup or confirmation failed'",
    "postinstall": "prisma generate",
    "prepare": "husky",
    "validate": "node scripts/validate-system.js",
    "validate:quick": "npm run validate:auth && npm run validate:db && npm run validate:mock",
    "validate:agent": "node scripts/validation-agent.js",
    "validate:strict": "node scripts/validation-agent.js --strict",
    "precommit:validate": "node scripts/validation-agent.js",
    "validate:auth": "grep -r 'organizer_id: userId' src/ || echo 'No userId misuse found'",
    "validate:db": "npx prisma validate",
    "validate:mock": "grep -r 'mockData\\|82\\.5%\\|placeholder' src/ || echo 'No mock data found'",
    "precommit": "npm run validate",
    "agent:start": "bash .claude/start-agent.sh",
    "agent:stop": "bash .claude/stop-agent.sh",
    "agent:status": "[ -f .claude/validation-agent.pid ] && kill -0 $(cat .claude/validation-agent.pid) 2>/dev/null && echo '✅ Agent is running' || echo '❌ Agent is not running'",
    "agent:logs": "tail -f .claude/validation-agent.log",
    "lock:acquire": "node .claude/file-lock-manager.js lock",
    "lock:release": "node .claude/file-lock-manager.js unlock",
    "lock:check": "node .claude/file-lock-manager.js check",
    "fix:eslint": "node scripts/fix-eslint-warnings.js",
    "fix:eslint:batch": "node scripts/batch-eslint-fix.js",
    "fix:eslint:tests": "node scripts/batch-eslint-fix.js --tests-only",
    "fix:eslint:api": "node scripts/batch-eslint-fix.js --api-only",
    "fix:all": "npm run fix:eslint && npm run fix:eslint:batch && npm run lint",
    "fix:agendaiq": "node .claude/agendaiq-eslint-agent.js",
    "fix:agendaiq:watch": "node .claude/agendaiq-eslint-agent.js --watch",
    "lock:list": "node .claude/file-lock-manager.js list",
    "lock:cleanup": "node .claude/file-lock-manager.js cleanup",
    "safe-lint": "node scripts/safe-lint-enforcer.js",
    "safe-lint:dry-run": "node scripts/safe-lint-enforcer.js --dry-run",
    "safe-lint:jsx": "node scripts/safe-lint-enforcer.js --mode jsx",
    "safe-lint:casting": "node scripts/safe-lint-enforcer.js --mode casting",
    "safe-lint:imports": "node scripts/safe-lint-enforcer.js --mode imports",
    "safe-lint:production": "node scripts/safe-lint-enforcer.js --max-files 3 --allow-errors 0",
    "safe-lint:components": "node scripts/safe-lint-enforcer.js --pattern 'src/components/**/*.{ts,tsx}'",
    "safe-lint:api": "node scripts/safe-lint-enforcer.js --pattern 'src/app/api/**/*.ts'"
  },
  "dependencies": {
    "@auth/prisma-adapter": "^2.10.0",
    "@axe-core/puppeteer": "^4.10.2",
    "@dnd-kit/core": "^6.3.1",
    "@dnd-kit/sortable": "^10.0.0",
    "@dnd-kit/utilities": "^3.2.2",
    "@next-auth/prisma-adapter": "^1.0.7",
    "@octokit/rest": "^22.0.0",
    "@panva/hkdf": "^1.2.1",
    "@prisma/client": "^6.14.0",
    "@radix-ui/react-alert-dialog": "^1.1.14",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-checkbox": "^1.3.2",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-dropdown-menu": "^2.1.15",
    "@radix-ui/react-icons": "^1.3.2",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-popover": "^1.1.14",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-radio-group": "^1.3.7",
    "@radix-ui/react-scroll-area": "^1.2.9",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-tabs": "^1.1.12",
    "@radix-ui/react-toast": "^1.2.14",
    "@react-email/render": "^1.2.1",
    "@tailwindcss/postcss": "^4.1.12",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/speakeasy": "^2.0.10",
    "@types/uuid": "^10.0.0",
    "@upstash/ratelimit": "^2.0.6",
    "@upstash/redis": "^1.35.3",
    "bcrypt": "^6.0.0",
    "bcryptjs": "^3.0.2",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.1.1",
    "date-fns": "^3.6.0",
    "isomorphic-dompurify": "^2.26.0",
    "jose": "^6.0.12",
    "jsonwebtoken": "^9.0.2",
    "lucide-react": "^0.515.0",
    "next": "^15.3.3",
    "next-auth": "^4.24.11",
    "next-pwa": "^5.6.0",
    "next-themes": "^0.4.6",
    "node-releases": "^2.0.19",
    "nodemailer": "^6.9.16",
    "oidc-token-hash": "^5.1.1",
    "otplib": "^12.0.1",
    "pg": "^8.16.3",
    "posthog-js": "^1.260.1",
    "posthog-node": "^5.7.0",
    "puppeteer": "^24.16.0",
    "react": "18.3.1",
    "react-day-picker": "^9.8.1",
    "react-dom": "18.3.1",
    "react-error-boundary": "^6.0.0",
    "resend": "^4.6.0",
    "sonner": "^2.0.7",
    "speakeasy": "^2.0.0",
    "styled-jsx": "^5.1.7",
    "tailwind-merge": "^3.3.1",
    "tailwindcss": "3.4.17",
    "tailwindcss-animate": "^1.0.7",
    "uuid": "^11.1.0",
    "web-vitals": "^5.1.0",
    "zod": "^3.25.65"
  },
  "devDependencies": {
    "@faker-js/faker": "^9.9.0",
    "@next/bundle-analyzer": "^15.4.6",
    "@playwright/test": "^1.54.2",
    "@testing-library/jest-dom": "^6.6.4",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/bcrypt": "^6.0.0",
    "@types/bcryptjs": "^3.0.0",
    "@types/dompurify": "^3.0.5",
    "@types/jest": "^30.0.0",
    "@types/lru-cache": "7.10.9",
    "@types/node": "^24.1.0",
    "@types/nodemailer": "^6.4.17",
    "@types/react": "^18.3.15",
    "@types/react-dom": "^18.3.5",
    "@types/supertest": "^6.0.3",
    "autoprefixer": "^10.4.21",
    "cross-env": "^10.0.0",
    "dotenv": "^17.2.1",
    "eslint": "^9.32.0",
    "eslint-config-next": "^15.4.5",
    "glob": "^11.0.3",
    "husky": "^9.1.7",
    "jest": "^30.0.5",
    "jest-environment-jsdom": "^30.0.5",
    "jest-environment-node": "^30.0.5",
    "jest-html-reporter": "^4.3.0",
    "jest-junit": "^16.0.0",
    "jest-sonar-reporter": "^2.0.0",
    "jest-watch-select-projects": "^2.0.0",
    "jest-watch-typeahead": "^3.0.1",
    "lru-cache": "10.4.3",
    "msw": "^2.10.4",
    "node-fetch": "^2.7.0",
    "playwright": "^1.54.2",
    "postcss": "^8.5.6",
    "prisma": "^6.14.0",
    "pusher-js": "^8.4.0",
    "supertest": "^7.1.4",
    "ts-jest": "^29.4.1",
    "typescript": "^5.9.2",
    "web-streams-polyfill": "^4.1.0",
    "whatwg-fetch": "^3.6.20"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "prisma": {
    "seed": "node prisma/seed.js"
  }
}
