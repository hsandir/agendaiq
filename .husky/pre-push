#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo "${YELLOW}üöÄ Running pre-push checks...${NC}"

# Get current branch
BRANCH=$(git rev-parse --abbrev-ref HEAD)
echo "Current branch: $BRANCH"

# 1. Don't allow direct push to main
if [ "$BRANCH" = "main" ]; then
  echo "${RED}‚ùå Direct push to main branch is not allowed!${NC}"
  echo "Please create a pull request instead."
  exit 1
fi

# 2. Run all tests
echo "Running test suite..."
npm run test:all
if [ $? -ne 0 ]; then
  echo "${RED}‚ùå Tests failed. Fix tests before pushing.${NC}"
  exit 1
fi

# 3. Build check
echo "Testing build..."
npm run build
if [ $? -ne 0 ]; then
  echo "${RED}‚ùå Build failed. Fix build errors before pushing.${NC}"
  exit 1
fi

# 4. Check for console.logs in production code
echo "Checking for console.logs..."
if grep -r "console.log" --include="*.ts" --include="*.tsx" --exclude-dir="node_modules" --exclude-dir=".next" --exclude-dir="tests" --exclude-dir="scripts" .; then
  echo "${YELLOW}‚ö†Ô∏è Warning: console.log statements found in code${NC}"
  read -p "Do you want to continue? (y/n) " -n 1 -r
  echo
  if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    exit 1
  fi
fi

# 5. Check commit messages
echo "Checking commit messages..."
COMMITS=$(git log origin/$BRANCH..HEAD --oneline)
if [ -z "$COMMITS" ]; then
  echo "No new commits to push"
else
  echo "New commits:"
  echo "$COMMITS"
fi

echo "${GREEN}‚úÖ All pre-push checks passed!${NC}"